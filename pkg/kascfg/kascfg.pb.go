// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.11.3
// source: pkg/kascfg/kascfg.proto

package kascfg

import (
	reflect "reflect"
	sync "sync"

	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	proto "github.com/golang/protobuf/proto"
	duration "github.com/golang/protobuf/ptypes/duration"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type ListenNetworkEnum int32

const (
	ListenNetworkEnum_tcp  ListenNetworkEnum = 0
	ListenNetworkEnum_tcp4 ListenNetworkEnum = 1
	ListenNetworkEnum_tcp6 ListenNetworkEnum = 2
	ListenNetworkEnum_unix ListenNetworkEnum = 3
)

// Enum value maps for ListenNetworkEnum.
var (
	ListenNetworkEnum_name = map[int32]string{
		0: "tcp",
		1: "tcp4",
		2: "tcp6",
		3: "unix",
	}
	ListenNetworkEnum_value = map[string]int32{
		"tcp":  0,
		"tcp4": 1,
		"tcp6": 2,
		"unix": 3,
	}
)

func (x ListenNetworkEnum) Enum() *ListenNetworkEnum {
	p := new(ListenNetworkEnum)
	*p = x
	return p
}

func (x ListenNetworkEnum) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ListenNetworkEnum) Descriptor() protoreflect.EnumDescriptor {
	return file_pkg_kascfg_kascfg_proto_enumTypes[0].Descriptor()
}

func (ListenNetworkEnum) Type() protoreflect.EnumType {
	return &file_pkg_kascfg_kascfg_proto_enumTypes[0]
}

func (x ListenNetworkEnum) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ListenNetworkEnum.Descriptor instead.
func (ListenNetworkEnum) EnumDescriptor() ([]byte, []int) {
	return file_pkg_kascfg_kascfg_proto_rawDescGZIP(), []int{0}
}

type LoggingLevelEnum int32

const (
	LoggingLevelEnum_info  LoggingLevelEnum = 0
	LoggingLevelEnum_debug LoggingLevelEnum = 1
	LoggingLevelEnum_warn  LoggingLevelEnum = 2
	LoggingLevelEnum_error LoggingLevelEnum = 3
)

// Enum value maps for LoggingLevelEnum.
var (
	LoggingLevelEnum_name = map[int32]string{
		0: "info",
		1: "debug",
		2: "warn",
		3: "error",
	}
	LoggingLevelEnum_value = map[string]int32{
		"info":  0,
		"debug": 1,
		"warn":  2,
		"error": 3,
	}
)

func (x LoggingLevelEnum) Enum() *LoggingLevelEnum {
	p := new(LoggingLevelEnum)
	*p = x
	return p
}

func (x LoggingLevelEnum) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (LoggingLevelEnum) Descriptor() protoreflect.EnumDescriptor {
	return file_pkg_kascfg_kascfg_proto_enumTypes[1].Descriptor()
}

func (LoggingLevelEnum) Type() protoreflect.EnumType {
	return &file_pkg_kascfg_kascfg_proto_enumTypes[1]
}

func (x LoggingLevelEnum) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use LoggingLevelEnum.Descriptor instead.
func (LoggingLevelEnum) EnumDescriptor() ([]byte, []int) {
	return file_pkg_kascfg_kascfg_proto_rawDescGZIP(), []int{1}
}

type ListenAgentCF struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Network   ListenNetworkEnum `protobuf:"varint,1,opt,name=network,proto3,enum=kascfg.ListenNetworkEnum" json:"network,omitempty"`
	Address   string            `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
	Websocket bool              `protobuf:"varint,3,opt,name=websocket,proto3" json:"websocket,omitempty"`
}

func (x *ListenAgentCF) Reset() {
	*x = ListenAgentCF{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_kascfg_kascfg_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListenAgentCF) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListenAgentCF) ProtoMessage() {}

func (x *ListenAgentCF) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_kascfg_kascfg_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListenAgentCF.ProtoReflect.Descriptor instead.
func (*ListenAgentCF) Descriptor() ([]byte, []int) {
	return file_pkg_kascfg_kascfg_proto_rawDescGZIP(), []int{0}
}

func (x *ListenAgentCF) GetNetwork() ListenNetworkEnum {
	if x != nil {
		return x.Network
	}
	return ListenNetworkEnum_tcp
}

func (x *ListenAgentCF) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *ListenAgentCF) GetWebsocket() bool {
	if x != nil {
		return x.Websocket
	}
	return false
}

type PrometheusCF struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UrlPath string `protobuf:"bytes,1,opt,name=url_path,proto3" json:"url_path,omitempty"`
}

func (x *PrometheusCF) Reset() {
	*x = PrometheusCF{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_kascfg_kascfg_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PrometheusCF) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PrometheusCF) ProtoMessage() {}

func (x *PrometheusCF) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_kascfg_kascfg_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PrometheusCF.ProtoReflect.Descriptor instead.
func (*PrometheusCF) Descriptor() ([]byte, []int) {
	return file_pkg_kascfg_kascfg_proto_rawDescGZIP(), []int{1}
}

func (x *PrometheusCF) GetUrlPath() string {
	if x != nil {
		return x.UrlPath
	}
	return ""
}

type ObservabilityListenCF struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Network ListenNetworkEnum `protobuf:"varint,1,opt,name=network,proto3,enum=kascfg.ListenNetworkEnum" json:"network,omitempty"`
	Address string            `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
}

func (x *ObservabilityListenCF) Reset() {
	*x = ObservabilityListenCF{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_kascfg_kascfg_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ObservabilityListenCF) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ObservabilityListenCF) ProtoMessage() {}

func (x *ObservabilityListenCF) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_kascfg_kascfg_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ObservabilityListenCF.ProtoReflect.Descriptor instead.
func (*ObservabilityListenCF) Descriptor() ([]byte, []int) {
	return file_pkg_kascfg_kascfg_proto_rawDescGZIP(), []int{2}
}

func (x *ObservabilityListenCF) GetNetwork() ListenNetworkEnum {
	if x != nil {
		return x.Network
	}
	return ListenNetworkEnum_tcp
}

func (x *ObservabilityListenCF) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

type TracingCF struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConnectionString string `protobuf:"bytes,1,opt,name=connection_string,proto3" json:"connection_string,omitempty"`
}

func (x *TracingCF) Reset() {
	*x = TracingCF{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_kascfg_kascfg_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TracingCF) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TracingCF) ProtoMessage() {}

func (x *TracingCF) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_kascfg_kascfg_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TracingCF.ProtoReflect.Descriptor instead.
func (*TracingCF) Descriptor() ([]byte, []int) {
	return file_pkg_kascfg_kascfg_proto_rawDescGZIP(), []int{3}
}

func (x *TracingCF) GetConnectionString() string {
	if x != nil {
		return x.ConnectionString
	}
	return ""
}

type LoggingCF struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Level LoggingLevelEnum `protobuf:"varint,1,opt,name=level,proto3,enum=kascfg.LoggingLevelEnum" json:"level,omitempty"`
}

func (x *LoggingCF) Reset() {
	*x = LoggingCF{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_kascfg_kascfg_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoggingCF) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoggingCF) ProtoMessage() {}

func (x *LoggingCF) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_kascfg_kascfg_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoggingCF.ProtoReflect.Descriptor instead.
func (*LoggingCF) Descriptor() ([]byte, []int) {
	return file_pkg_kascfg_kascfg_proto_rawDescGZIP(), []int{4}
}

func (x *LoggingCF) GetLevel() LoggingLevelEnum {
	if x != nil {
		return x.Level
	}
	return LoggingLevelEnum_info
}

type GitLabCF struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address                  string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	AuthenticationSecretFile string `protobuf:"bytes,2,opt,name=authentication_secret_file,proto3" json:"authentication_secret_file,omitempty"`
}

func (x *GitLabCF) Reset() {
	*x = GitLabCF{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_kascfg_kascfg_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GitLabCF) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GitLabCF) ProtoMessage() {}

func (x *GitLabCF) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_kascfg_kascfg_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GitLabCF.ProtoReflect.Descriptor instead.
func (*GitLabCF) Descriptor() ([]byte, []int) {
	return file_pkg_kascfg_kascfg_proto_rawDescGZIP(), []int{5}
}

func (x *GitLabCF) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *GitLabCF) GetAuthenticationSecretFile() string {
	if x != nil {
		return x.AuthenticationSecretFile
	}
	return ""
}

type GitopsCF struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PollPeriod               *duration.Duration `protobuf:"bytes,1,opt,name=poll_period,proto3" json:"poll_period,omitempty"`
	ProjectInfoCacheTtl      *duration.Duration `protobuf:"bytes,2,opt,name=project_info_cache_ttl,proto3" json:"project_info_cache_ttl,omitempty"`
	ProjectInfoCacheErrorTtl *duration.Duration `protobuf:"bytes,3,opt,name=project_info_cache_error_ttl,proto3" json:"project_info_cache_error_ttl,omitempty"`
}

func (x *GitopsCF) Reset() {
	*x = GitopsCF{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_kascfg_kascfg_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GitopsCF) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GitopsCF) ProtoMessage() {}

func (x *GitopsCF) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_kascfg_kascfg_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GitopsCF.ProtoReflect.Descriptor instead.
func (*GitopsCF) Descriptor() ([]byte, []int) {
	return file_pkg_kascfg_kascfg_proto_rawDescGZIP(), []int{6}
}

func (x *GitopsCF) GetPollPeriod() *duration.Duration {
	if x != nil {
		return x.PollPeriod
	}
	return nil
}

func (x *GitopsCF) GetProjectInfoCacheTtl() *duration.Duration {
	if x != nil {
		return x.ProjectInfoCacheTtl
	}
	return nil
}

func (x *GitopsCF) GetProjectInfoCacheErrorTtl() *duration.Duration {
	if x != nil {
		return x.ProjectInfoCacheErrorTtl
	}
	return nil
}

type SentryCF struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Dsn         string `protobuf:"bytes,1,opt,name=dsn,proto3" json:"dsn,omitempty"`
	Environment string `protobuf:"bytes,2,opt,name=environment,proto3" json:"environment,omitempty"`
}

func (x *SentryCF) Reset() {
	*x = SentryCF{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_kascfg_kascfg_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SentryCF) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SentryCF) ProtoMessage() {}

func (x *SentryCF) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_kascfg_kascfg_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SentryCF.ProtoReflect.Descriptor instead.
func (*SentryCF) Descriptor() ([]byte, []int) {
	return file_pkg_kascfg_kascfg_proto_rawDescGZIP(), []int{7}
}

func (x *SentryCF) GetDsn() string {
	if x != nil {
		return x.Dsn
	}
	return ""
}

func (x *SentryCF) GetEnvironment() string {
	if x != nil {
		return x.Environment
	}
	return ""
}

type AgentCF struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Configuration     *AgentConfigurationCF `protobuf:"bytes,1,opt,name=configuration,proto3" json:"configuration,omitempty"`
	Gitops            *GitopsCF             `protobuf:"bytes,2,opt,name=gitops,proto3" json:"gitops,omitempty"`
	InfoCacheTtl      *duration.Duration    `protobuf:"bytes,3,opt,name=info_cache_ttl,proto3" json:"info_cache_ttl,omitempty"`
	InfoCacheErrorTtl *duration.Duration    `protobuf:"bytes,4,opt,name=info_cache_error_ttl,proto3" json:"info_cache_error_ttl,omitempty"`
	Limits            *AgentLimitsCF        `protobuf:"bytes,5,opt,name=limits,proto3" json:"limits,omitempty"`
}

func (x *AgentCF) Reset() {
	*x = AgentCF{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_kascfg_kascfg_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgentCF) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentCF) ProtoMessage() {}

func (x *AgentCF) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_kascfg_kascfg_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentCF.ProtoReflect.Descriptor instead.
func (*AgentCF) Descriptor() ([]byte, []int) {
	return file_pkg_kascfg_kascfg_proto_rawDescGZIP(), []int{8}
}

func (x *AgentCF) GetConfiguration() *AgentConfigurationCF {
	if x != nil {
		return x.Configuration
	}
	return nil
}

func (x *AgentCF) GetGitops() *GitopsCF {
	if x != nil {
		return x.Gitops
	}
	return nil
}

func (x *AgentCF) GetInfoCacheTtl() *duration.Duration {
	if x != nil {
		return x.InfoCacheTtl
	}
	return nil
}

func (x *AgentCF) GetInfoCacheErrorTtl() *duration.Duration {
	if x != nil {
		return x.InfoCacheErrorTtl
	}
	return nil
}

func (x *AgentCF) GetLimits() *AgentLimitsCF {
	if x != nil {
		return x.Limits
	}
	return nil
}

type AgentConfigurationCF struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PollPeriod *duration.Duration `protobuf:"bytes,1,opt,name=poll_period,proto3" json:"poll_period,omitempty"`
}

func (x *AgentConfigurationCF) Reset() {
	*x = AgentConfigurationCF{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_kascfg_kascfg_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgentConfigurationCF) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentConfigurationCF) ProtoMessage() {}

func (x *AgentConfigurationCF) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_kascfg_kascfg_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentConfigurationCF.ProtoReflect.Descriptor instead.
func (*AgentConfigurationCF) Descriptor() ([]byte, []int) {
	return file_pkg_kascfg_kascfg_proto_rawDescGZIP(), []int{9}
}

func (x *AgentConfigurationCF) GetPollPeriod() *duration.Duration {
	if x != nil {
		return x.PollPeriod
	}
	return nil
}

type GoogleProfilerCF struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Enabled         bool   `protobuf:"varint,1,opt,name=enabled,proto3" json:"enabled,omitempty"`
	ProjectId       string `protobuf:"bytes,2,opt,name=project_id,proto3" json:"project_id,omitempty"`
	CredentialsFile string `protobuf:"bytes,3,opt,name=credentials_file,proto3" json:"credentials_file,omitempty"`
}

func (x *GoogleProfilerCF) Reset() {
	*x = GoogleProfilerCF{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_kascfg_kascfg_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleProfilerCF) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleProfilerCF) ProtoMessage() {}

func (x *GoogleProfilerCF) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_kascfg_kascfg_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleProfilerCF.ProtoReflect.Descriptor instead.
func (*GoogleProfilerCF) Descriptor() ([]byte, []int) {
	return file_pkg_kascfg_kascfg_proto_rawDescGZIP(), []int{10}
}

func (x *GoogleProfilerCF) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *GoogleProfilerCF) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *GoogleProfilerCF) GetCredentialsFile() string {
	if x != nil {
		return x.CredentialsFile
	}
	return ""
}

type LivenessProbeCF struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UrlPath string `protobuf:"bytes,1,opt,name=url_path,proto3" json:"url_path,omitempty"`
}

func (x *LivenessProbeCF) Reset() {
	*x = LivenessProbeCF{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_kascfg_kascfg_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LivenessProbeCF) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LivenessProbeCF) ProtoMessage() {}

func (x *LivenessProbeCF) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_kascfg_kascfg_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LivenessProbeCF.ProtoReflect.Descriptor instead.
func (*LivenessProbeCF) Descriptor() ([]byte, []int) {
	return file_pkg_kascfg_kascfg_proto_rawDescGZIP(), []int{11}
}

func (x *LivenessProbeCF) GetUrlPath() string {
	if x != nil {
		return x.UrlPath
	}
	return ""
}

type ReadinessProbeCF struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UrlPath string `protobuf:"bytes,1,opt,name=url_path,proto3" json:"url_path,omitempty"`
}

func (x *ReadinessProbeCF) Reset() {
	*x = ReadinessProbeCF{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_kascfg_kascfg_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadinessProbeCF) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadinessProbeCF) ProtoMessage() {}

func (x *ReadinessProbeCF) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_kascfg_kascfg_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadinessProbeCF.ProtoReflect.Descriptor instead.
func (*ReadinessProbeCF) Descriptor() ([]byte, []int) {
	return file_pkg_kascfg_kascfg_proto_rawDescGZIP(), []int{12}
}

func (x *ReadinessProbeCF) GetUrlPath() string {
	if x != nil {
		return x.UrlPath
	}
	return ""
}

type ObservabilityCF struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UsageReportingPeriod *duration.Duration     `protobuf:"bytes,1,opt,name=usage_reporting_period,proto3" json:"usage_reporting_period,omitempty"`
	Listen               *ObservabilityListenCF `protobuf:"bytes,2,opt,name=listen,proto3" json:"listen,omitempty"`
	Prometheus           *PrometheusCF          `protobuf:"bytes,3,opt,name=prometheus,proto3" json:"prometheus,omitempty"`
	Tracing              *TracingCF             `protobuf:"bytes,4,opt,name=tracing,proto3" json:"tracing,omitempty"`
	Sentry               *SentryCF              `protobuf:"bytes,5,opt,name=sentry,proto3" json:"sentry,omitempty"`
	Logging              *LoggingCF             `protobuf:"bytes,6,opt,name=logging,proto3" json:"logging,omitempty"`
	GoogleProfiler       *GoogleProfilerCF      `protobuf:"bytes,7,opt,name=google_profiler,proto3" json:"google_profiler,omitempty"`
	LivenessProbe        *LivenessProbeCF       `protobuf:"bytes,8,opt,name=liveness_probe,proto3" json:"liveness_probe,omitempty"`
	ReadinessProbe       *ReadinessProbeCF      `protobuf:"bytes,9,opt,name=readiness_probe,proto3" json:"readiness_probe,omitempty"`
}

func (x *ObservabilityCF) Reset() {
	*x = ObservabilityCF{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_kascfg_kascfg_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ObservabilityCF) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ObservabilityCF) ProtoMessage() {}

func (x *ObservabilityCF) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_kascfg_kascfg_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ObservabilityCF.ProtoReflect.Descriptor instead.
func (*ObservabilityCF) Descriptor() ([]byte, []int) {
	return file_pkg_kascfg_kascfg_proto_rawDescGZIP(), []int{13}
}

func (x *ObservabilityCF) GetUsageReportingPeriod() *duration.Duration {
	if x != nil {
		return x.UsageReportingPeriod
	}
	return nil
}

func (x *ObservabilityCF) GetListen() *ObservabilityListenCF {
	if x != nil {
		return x.Listen
	}
	return nil
}

func (x *ObservabilityCF) GetPrometheus() *PrometheusCF {
	if x != nil {
		return x.Prometheus
	}
	return nil
}

func (x *ObservabilityCF) GetTracing() *TracingCF {
	if x != nil {
		return x.Tracing
	}
	return nil
}

func (x *ObservabilityCF) GetSentry() *SentryCF {
	if x != nil {
		return x.Sentry
	}
	return nil
}

func (x *ObservabilityCF) GetLogging() *LoggingCF {
	if x != nil {
		return x.Logging
	}
	return nil
}

func (x *ObservabilityCF) GetGoogleProfiler() *GoogleProfilerCF {
	if x != nil {
		return x.GoogleProfiler
	}
	return nil
}

func (x *ObservabilityCF) GetLivenessProbe() *LivenessProbeCF {
	if x != nil {
		return x.LivenessProbe
	}
	return nil
}

func (x *ObservabilityCF) GetReadinessProbe() *ReadinessProbeCF {
	if x != nil {
		return x.ReadinessProbe
	}
	return nil
}

type TokenBucketRateLimitCF struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RefillRatePerSecond float64 `protobuf:"fixed64,1,opt,name=refill_rate_per_second,proto3" json:"refill_rate_per_second,omitempty"`
	BucketSize          uint32  `protobuf:"varint,2,opt,name=bucket_size,proto3" json:"bucket_size,omitempty"`
}

func (x *TokenBucketRateLimitCF) Reset() {
	*x = TokenBucketRateLimitCF{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_kascfg_kascfg_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TokenBucketRateLimitCF) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TokenBucketRateLimitCF) ProtoMessage() {}

func (x *TokenBucketRateLimitCF) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_kascfg_kascfg_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TokenBucketRateLimitCF.ProtoReflect.Descriptor instead.
func (*TokenBucketRateLimitCF) Descriptor() ([]byte, []int) {
	return file_pkg_kascfg_kascfg_proto_rawDescGZIP(), []int{14}
}

func (x *TokenBucketRateLimitCF) GetRefillRatePerSecond() float64 {
	if x != nil {
		return x.RefillRatePerSecond
	}
	return 0
}

func (x *TokenBucketRateLimitCF) GetBucketSize() uint32 {
	if x != nil {
		return x.BucketSize
	}
	return 0
}

type GitalyCF struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GlobalApiRateLimit    *TokenBucketRateLimitCF `protobuf:"bytes,1,opt,name=global_api_rate_limit,proto3" json:"global_api_rate_limit,omitempty"`
	PerServerApiRateLimit *TokenBucketRateLimitCF `protobuf:"bytes,2,opt,name=per_server_api_rate_limit,proto3" json:"per_server_api_rate_limit,omitempty"`
}

func (x *GitalyCF) Reset() {
	*x = GitalyCF{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_kascfg_kascfg_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GitalyCF) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GitalyCF) ProtoMessage() {}

func (x *GitalyCF) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_kascfg_kascfg_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GitalyCF.ProtoReflect.Descriptor instead.
func (*GitalyCF) Descriptor() ([]byte, []int) {
	return file_pkg_kascfg_kascfg_proto_rawDescGZIP(), []int{15}
}

func (x *GitalyCF) GetGlobalApiRateLimit() *TokenBucketRateLimitCF {
	if x != nil {
		return x.GlobalApiRateLimit
	}
	return nil
}

func (x *GitalyCF) GetPerServerApiRateLimit() *TokenBucketRateLimitCF {
	if x != nil {
		return x.PerServerApiRateLimit
	}
	return nil
}

type RedisCF struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Url            string             `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	Password       string             `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	MaxIdle        uint32             `protobuf:"varint,3,opt,name=max_idle,proto3" json:"max_idle,omitempty"`
	MaxActive      uint32             `protobuf:"varint,4,opt,name=max_active,proto3" json:"max_active,omitempty"`
	ReadTimeout    *duration.Duration `protobuf:"bytes,5,opt,name=read_timeout,proto3" json:"read_timeout,omitempty"`
	WriteTimeout   *duration.Duration `protobuf:"bytes,6,opt,name=write_timeout,proto3" json:"write_timeout,omitempty"`
	Keepalive      *duration.Duration `protobuf:"bytes,7,opt,name=keepalive,proto3" json:"keepalive,omitempty"`
	SentinelMaster string             `protobuf:"bytes,8,opt,name=sentinel_master,proto3" json:"sentinel_master,omitempty"`
	Sentinels      []string           `protobuf:"bytes,9,rep,name=sentinels,proto3" json:"sentinels,omitempty"`
}

func (x *RedisCF) Reset() {
	*x = RedisCF{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_kascfg_kascfg_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RedisCF) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RedisCF) ProtoMessage() {}

func (x *RedisCF) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_kascfg_kascfg_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RedisCF.ProtoReflect.Descriptor instead.
func (*RedisCF) Descriptor() ([]byte, []int) {
	return file_pkg_kascfg_kascfg_proto_rawDescGZIP(), []int{16}
}

func (x *RedisCF) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *RedisCF) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *RedisCF) GetMaxIdle() uint32 {
	if x != nil {
		return x.MaxIdle
	}
	return 0
}

func (x *RedisCF) GetMaxActive() uint32 {
	if x != nil {
		return x.MaxActive
	}
	return 0
}

func (x *RedisCF) GetReadTimeout() *duration.Duration {
	if x != nil {
		return x.ReadTimeout
	}
	return nil
}

func (x *RedisCF) GetWriteTimeout() *duration.Duration {
	if x != nil {
		return x.WriteTimeout
	}
	return nil
}

func (x *RedisCF) GetKeepalive() *duration.Duration {
	if x != nil {
		return x.Keepalive
	}
	return nil
}

func (x *RedisCF) GetSentinelMaster() string {
	if x != nil {
		return x.SentinelMaster
	}
	return ""
}

func (x *RedisCF) GetSentinels() []string {
	if x != nil {
		return x.Sentinels
	}
	return nil
}

type AgentLimitsCF struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConnectionsPerTokenPerMinute uint32 `protobuf:"varint,1,opt,name=connections_per_token_per_minute,proto3" json:"connections_per_token_per_minute,omitempty"`
	RedisKeyPrefix               string `protobuf:"bytes,2,opt,name=redis_key_prefix,proto3" json:"redis_key_prefix,omitempty"`
}

func (x *AgentLimitsCF) Reset() {
	*x = AgentLimitsCF{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_kascfg_kascfg_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgentLimitsCF) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentLimitsCF) ProtoMessage() {}

func (x *AgentLimitsCF) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_kascfg_kascfg_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentLimitsCF.ProtoReflect.Descriptor instead.
func (*AgentLimitsCF) Descriptor() ([]byte, []int) {
	return file_pkg_kascfg_kascfg_proto_rawDescGZIP(), []int{17}
}

func (x *AgentLimitsCF) GetConnectionsPerTokenPerMinute() uint32 {
	if x != nil {
		return x.ConnectionsPerTokenPerMinute
	}
	return 0
}

func (x *AgentLimitsCF) GetRedisKeyPrefix() string {
	if x != nil {
		return x.RedisKeyPrefix
	}
	return ""
}

type ConfigurationFile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ListenAgent   *ListenAgentCF   `protobuf:"bytes,1,opt,name=listen_agent,proto3" json:"listen_agent,omitempty"`
	Gitlab        *GitLabCF        `protobuf:"bytes,2,opt,name=gitlab,proto3" json:"gitlab,omitempty"`
	Agent         *AgentCF         `protobuf:"bytes,3,opt,name=agent,proto3" json:"agent,omitempty"`
	Observability *ObservabilityCF `protobuf:"bytes,4,opt,name=observability,proto3" json:"observability,omitempty"`
	Gitaly        *GitalyCF        `protobuf:"bytes,5,opt,name=gitaly,proto3" json:"gitaly,omitempty"`
	Redis         *RedisCF         `protobuf:"bytes,6,opt,name=redis,proto3" json:"redis,omitempty"`
}

func (x *ConfigurationFile) Reset() {
	*x = ConfigurationFile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_kascfg_kascfg_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigurationFile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigurationFile) ProtoMessage() {}

func (x *ConfigurationFile) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_kascfg_kascfg_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigurationFile.ProtoReflect.Descriptor instead.
func (*ConfigurationFile) Descriptor() ([]byte, []int) {
	return file_pkg_kascfg_kascfg_proto_rawDescGZIP(), []int{18}
}

func (x *ConfigurationFile) GetListenAgent() *ListenAgentCF {
	if x != nil {
		return x.ListenAgent
	}
	return nil
}

func (x *ConfigurationFile) GetGitlab() *GitLabCF {
	if x != nil {
		return x.Gitlab
	}
	return nil
}

func (x *ConfigurationFile) GetAgent() *AgentCF {
	if x != nil {
		return x.Agent
	}
	return nil
}

func (x *ConfigurationFile) GetObservability() *ObservabilityCF {
	if x != nil {
		return x.Observability
	}
	return nil
}

func (x *ConfigurationFile) GetGitaly() *GitalyCF {
	if x != nil {
		return x.Gitaly
	}
	return nil
}

func (x *ConfigurationFile) GetRedis() *RedisCF {
	if x != nil {
		return x.Redis
	}
	return nil
}

var File_pkg_kascfg_kascfg_proto protoreflect.FileDescriptor

var file_pkg_kascfg_kascfg_proto_rawDesc = []byte{
	0x0a, 0x17, 0x70, 0x6b, 0x67, 0x2f, 0x6b, 0x61, 0x73, 0x63, 0x66, 0x67, 0x2f, 0x6b, 0x61, 0x73,
	0x63, 0x66, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06, 0x6b, 0x61, 0x73, 0x63, 0x66,
	0x67, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x17, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69,
	0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x7e, 0x0a, 0x0d, 0x4c, 0x69,
	0x73, 0x74, 0x65, 0x6e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x43, 0x46, 0x12, 0x35, 0x0a, 0x07, 0x6e,
	0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1b, 0x2e, 0x6b,
	0x61, 0x73, 0x63, 0x66, 0x67, 0x2e, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x5f, 0x6e, 0x65, 0x74,
	0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x65, 0x6e, 0x75, 0x6d, 0x52, 0x07, 0x6e, 0x65, 0x74, 0x77, 0x6f,
	0x72, 0x6b, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1c, 0x0a, 0x09,
	0x77, 0x65, 0x62, 0x73, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x09, 0x77, 0x65, 0x62, 0x73, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x22, 0x2a, 0x0a, 0x0c, 0x50, 0x72,
	0x6f, 0x6d, 0x65, 0x74, 0x68, 0x65, 0x75, 0x73, 0x43, 0x46, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x72,
	0x6c, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x72,
	0x6c, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x22, 0x68, 0x0a, 0x15, 0x4f, 0x62, 0x73, 0x65, 0x72, 0x76,
	0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x43, 0x46, 0x12,
	0x35, 0x0a, 0x07, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x1b, 0x2e, 0x6b, 0x61, 0x73, 0x63, 0x66, 0x67, 0x2e, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e,
	0x5f, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x65, 0x6e, 0x75, 0x6d, 0x52, 0x07, 0x6e,
	0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x22, 0x39, 0x0a, 0x09, 0x54, 0x72, 0x61, 0x63, 0x69, 0x6e, 0x67, 0x43, 0x46, 0x12, 0x2c, 0x0a,
	0x11, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x74, 0x72, 0x69,
	0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x22, 0x3d, 0x0a, 0x09, 0x4c,
	0x6f, 0x67, 0x67, 0x69, 0x6e, 0x67, 0x43, 0x46, 0x12, 0x30, 0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65,
	0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1a, 0x2e, 0x6b, 0x61, 0x73, 0x63, 0x66, 0x67,
	0x2e, 0x6c, 0x6f, 0x67, 0x67, 0x69, 0x6e, 0x67, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x5f, 0x65,
	0x6e, 0x75, 0x6d, 0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x22, 0x64, 0x0a, 0x08, 0x47, 0x69,
	0x74, 0x4c, 0x61, 0x62, 0x43, 0x46, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x12, 0x3e, 0x0a, 0x1a, 0x61, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x1a, 0x61, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x5f, 0x66, 0x69, 0x6c, 0x65,
	0x22, 0x97, 0x02, 0x0a, 0x08, 0x47, 0x69, 0x74, 0x6f, 0x70, 0x73, 0x43, 0x46, 0x12, 0x45, 0x0a,
	0x0b, 0x70, 0x6f, 0x6c, 0x6c, 0x5f, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x08, 0xfa,
	0x42, 0x05, 0xaa, 0x01, 0x02, 0x2a, 0x00, 0x52, 0x0b, 0x70, 0x6f, 0x6c, 0x6c, 0x5f, 0x70, 0x65,
	0x72, 0x69, 0x6f, 0x64, 0x12, 0x5b, 0x0a, 0x16, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f,
	0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x63, 0x61, 0x63, 0x68, 0x65, 0x5f, 0x74, 0x74, 0x6c, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42,
	0x08, 0xfa, 0x42, 0x05, 0xaa, 0x01, 0x02, 0x32, 0x00, 0x52, 0x16, 0x70, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x63, 0x61, 0x63, 0x68, 0x65, 0x5f, 0x74, 0x74,
	0x6c, 0x12, 0x67, 0x0a, 0x1c, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x6e, 0x66,
	0x6f, 0x5f, 0x63, 0x61, 0x63, 0x68, 0x65, 0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x74, 0x74,
	0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x42, 0x08, 0xfa, 0x42, 0x05, 0xaa, 0x01, 0x02, 0x2a, 0x00, 0x52, 0x1c, 0x70, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x63, 0x61, 0x63, 0x68, 0x65,
	0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x74, 0x74, 0x6c, 0x22, 0x3e, 0x0a, 0x08, 0x53, 0x65,
	0x6e, 0x74, 0x72, 0x79, 0x43, 0x46, 0x12, 0x10, 0x0a, 0x03, 0x64, 0x73, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x64, 0x73, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x65, 0x6e, 0x76, 0x69,
	0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x65,
	0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0xcc, 0x02, 0x0a, 0x07, 0x41,
	0x67, 0x65, 0x6e, 0x74, 0x43, 0x46, 0x12, 0x42, 0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e,
	0x6b, 0x61, 0x73, 0x63, 0x66, 0x67, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x46, 0x52, 0x0d, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x28, 0x0a, 0x06, 0x67, 0x69,
	0x74, 0x6f, 0x70, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6b, 0x61, 0x73,
	0x63, 0x66, 0x67, 0x2e, 0x47, 0x69, 0x74, 0x6f, 0x70, 0x73, 0x43, 0x46, 0x52, 0x06, 0x67, 0x69,
	0x74, 0x6f, 0x70, 0x73, 0x12, 0x4b, 0x0a, 0x0e, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x63, 0x61, 0x63,
	0x68, 0x65, 0x5f, 0x74, 0x74, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44,
	0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x08, 0xfa, 0x42, 0x05, 0xaa, 0x01, 0x02, 0x32,
	0x00, 0x52, 0x0e, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x63, 0x61, 0x63, 0x68, 0x65, 0x5f, 0x74, 0x74,
	0x6c, 0x12, 0x57, 0x0a, 0x14, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x63, 0x61, 0x63, 0x68, 0x65, 0x5f,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x74, 0x74, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x08, 0xfa, 0x42, 0x05, 0xaa,
	0x01, 0x02, 0x2a, 0x00, 0x52, 0x14, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x63, 0x61, 0x63, 0x68, 0x65,
	0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x74, 0x74, 0x6c, 0x12, 0x2d, 0x0a, 0x06, 0x6c, 0x69,
	0x6d, 0x69, 0x74, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6b, 0x61, 0x73,
	0x63, 0x66, 0x67, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x73, 0x43,
	0x46, 0x52, 0x06, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x73, 0x22, 0x5d, 0x0a, 0x14, 0x41, 0x67, 0x65,
	0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43,
	0x46, 0x12, 0x45, 0x0a, 0x0b, 0x70, 0x6f, 0x6c, 0x6c, 0x5f, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x42, 0x08, 0xfa, 0x42, 0x05, 0xaa, 0x01, 0x02, 0x2a, 0x00, 0x52, 0x0b, 0x70, 0x6f, 0x6c,
	0x6c, 0x5f, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x22, 0x78, 0x0a, 0x10, 0x47, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x72, 0x43, 0x46, 0x12, 0x18, 0x0a, 0x07,
	0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x65,
	0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x12, 0x2a, 0x0a, 0x10, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x61, 0x6c, 0x73, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x10, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x5f, 0x66, 0x69,
	0x6c, 0x65, 0x22, 0x2d, 0x0a, 0x0f, 0x4c, 0x69, 0x76, 0x65, 0x6e, 0x65, 0x73, 0x73, 0x50, 0x72,
	0x6f, 0x62, 0x65, 0x43, 0x46, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x72, 0x6c, 0x5f, 0x70, 0x61, 0x74,
	0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x72, 0x6c, 0x5f, 0x70, 0x61, 0x74,
	0x68, 0x22, 0x2e, 0x0a, 0x10, 0x52, 0x65, 0x61, 0x64, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x50, 0x72,
	0x6f, 0x62, 0x65, 0x43, 0x46, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x72, 0x6c, 0x5f, 0x70, 0x61, 0x74,
	0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x72, 0x6c, 0x5f, 0x70, 0x61, 0x74,
	0x68, 0x22, 0xa8, 0x04, 0x0a, 0x0f, 0x4f, 0x62, 0x73, 0x65, 0x72, 0x76, 0x61, 0x62, 0x69, 0x6c,
	0x69, 0x74, 0x79, 0x43, 0x46, 0x12, 0x5b, 0x0a, 0x16, 0x75, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x72,
	0x65, 0x70, 0x6f, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x42, 0x08, 0xfa, 0x42, 0x05, 0xaa, 0x01, 0x02, 0x32, 0x00, 0x52, 0x16, 0x75, 0x73, 0x61, 0x67,
	0x65, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x70, 0x65, 0x72, 0x69,
	0x6f, 0x64, 0x12, 0x35, 0x0a, 0x06, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x6b, 0x61, 0x73, 0x63, 0x66, 0x67, 0x2e, 0x4f, 0x62, 0x73, 0x65,
	0x72, 0x76, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x43,
	0x46, 0x52, 0x06, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x12, 0x34, 0x0a, 0x0a, 0x70, 0x72, 0x6f,
	0x6d, 0x65, 0x74, 0x68, 0x65, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e,
	0x6b, 0x61, 0x73, 0x63, 0x66, 0x67, 0x2e, 0x50, 0x72, 0x6f, 0x6d, 0x65, 0x74, 0x68, 0x65, 0x75,
	0x73, 0x43, 0x46, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x6d, 0x65, 0x74, 0x68, 0x65, 0x75, 0x73, 0x12,
	0x2b, 0x0a, 0x07, 0x74, 0x72, 0x61, 0x63, 0x69, 0x6e, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x11, 0x2e, 0x6b, 0x61, 0x73, 0x63, 0x66, 0x67, 0x2e, 0x54, 0x72, 0x61, 0x63, 0x69, 0x6e,
	0x67, 0x43, 0x46, 0x52, 0x07, 0x74, 0x72, 0x61, 0x63, 0x69, 0x6e, 0x67, 0x12, 0x28, 0x0a, 0x06,
	0x73, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6b,
	0x61, 0x73, 0x63, 0x66, 0x67, 0x2e, 0x53, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x43, 0x46, 0x52, 0x06,
	0x73, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x2b, 0x0a, 0x07, 0x6c, 0x6f, 0x67, 0x67, 0x69, 0x6e,
	0x67, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6b, 0x61, 0x73, 0x63, 0x66, 0x67,
	0x2e, 0x4c, 0x6f, 0x67, 0x67, 0x69, 0x6e, 0x67, 0x43, 0x46, 0x52, 0x07, 0x6c, 0x6f, 0x67, 0x67,
	0x69, 0x6e, 0x67, 0x12, 0x42, 0x0a, 0x0f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x5f, 0x70, 0x72,
	0x6f, 0x66, 0x69, 0x6c, 0x65, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6b,
	0x61, 0x73, 0x63, 0x66, 0x67, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x50, 0x72, 0x6f, 0x66,
	0x69, 0x6c, 0x65, 0x72, 0x43, 0x46, 0x52, 0x0f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x5f, 0x70,
	0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x72, 0x12, 0x3f, 0x0a, 0x0e, 0x6c, 0x69, 0x76, 0x65, 0x6e,
	0x65, 0x73, 0x73, 0x5f, 0x70, 0x72, 0x6f, 0x62, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x17, 0x2e, 0x6b, 0x61, 0x73, 0x63, 0x66, 0x67, 0x2e, 0x4c, 0x69, 0x76, 0x65, 0x6e, 0x65, 0x73,
	0x73, 0x50, 0x72, 0x6f, 0x62, 0x65, 0x43, 0x46, 0x52, 0x0e, 0x6c, 0x69, 0x76, 0x65, 0x6e, 0x65,
	0x73, 0x73, 0x5f, 0x70, 0x72, 0x6f, 0x62, 0x65, 0x12, 0x42, 0x0a, 0x0f, 0x72, 0x65, 0x61, 0x64,
	0x69, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x70, 0x72, 0x6f, 0x62, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x18, 0x2e, 0x6b, 0x61, 0x73, 0x63, 0x66, 0x67, 0x2e, 0x52, 0x65, 0x61, 0x64, 0x69,
	0x6e, 0x65, 0x73, 0x73, 0x50, 0x72, 0x6f, 0x62, 0x65, 0x43, 0x46, 0x52, 0x0f, 0x72, 0x65, 0x61,
	0x64, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x70, 0x72, 0x6f, 0x62, 0x65, 0x22, 0x8b, 0x01, 0x0a,
	0x16, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x61, 0x74, 0x65,
	0x4c, 0x69, 0x6d, 0x69, 0x74, 0x43, 0x46, 0x12, 0x46, 0x0a, 0x16, 0x72, 0x65, 0x66, 0x69, 0x6c,
	0x6c, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x5f, 0x70, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x63, 0x6f, 0x6e,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x42, 0x0e, 0xfa, 0x42, 0x0b, 0x12, 0x09, 0x29, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x52, 0x16, 0x72, 0x65, 0x66, 0x69, 0x6c, 0x6c, 0x5f,
	0x72, 0x61, 0x74, 0x65, 0x5f, 0x70, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x12,
	0x29, 0x0a, 0x0b, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0d, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x2a, 0x02, 0x28, 0x00, 0x52, 0x0b, 0x62,
	0x75, 0x63, 0x6b, 0x65, 0x74, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x22, 0xbe, 0x01, 0x0a, 0x08, 0x47,
	0x69, 0x74, 0x61, 0x6c, 0x79, 0x43, 0x46, 0x12, 0x54, 0x0a, 0x15, 0x67, 0x6c, 0x6f, 0x62, 0x61,
	0x6c, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x6b, 0x61, 0x73, 0x63, 0x66, 0x67, 0x2e,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x61, 0x74, 0x65, 0x4c,
	0x69, 0x6d, 0x69, 0x74, 0x43, 0x46, 0x52, 0x15, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x5f, 0x61,
	0x70, 0x69, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x5c, 0x0a,
	0x19, 0x70, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x61, 0x70, 0x69, 0x5f,
	0x72, 0x61, 0x74, 0x65, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1e, 0x2e, 0x6b, 0x61, 0x73, 0x63, 0x66, 0x67, 0x2e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x42,
	0x75, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x43, 0x46,
	0x52, 0x19, 0x70, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x61, 0x70, 0x69,
	0x5f, 0x72, 0x61, 0x74, 0x65, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0xa4, 0x03, 0x0a, 0x07,
	0x52, 0x65, 0x64, 0x69, 0x73, 0x43, 0x46, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73,
	0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73,
	0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x23, 0x0a, 0x08, 0x6d, 0x61, 0x78, 0x5f, 0x69, 0x64, 0x6c,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x2a, 0x02, 0x28, 0x00,
	0x52, 0x08, 0x6d, 0x61, 0x78, 0x5f, 0x69, 0x64, 0x6c, 0x65, 0x12, 0x27, 0x0a, 0x0a, 0x6d, 0x61,
	0x78, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x07,
	0xfa, 0x42, 0x04, 0x2a, 0x02, 0x28, 0x00, 0x52, 0x0a, 0x6d, 0x61, 0x78, 0x5f, 0x61, 0x63, 0x74,
	0x69, 0x76, 0x65, 0x12, 0x47, 0x0a, 0x0c, 0x72, 0x65, 0x61, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x6f, 0x75, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x42, 0x08, 0xfa, 0x42, 0x05, 0xaa, 0x01, 0x02, 0x2a, 0x00, 0x52, 0x0c,
	0x72, 0x65, 0x61, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x12, 0x49, 0x0a, 0x0d,
	0x77, 0x72, 0x69, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x08,
	0xfa, 0x42, 0x05, 0xaa, 0x01, 0x02, 0x2a, 0x00, 0x52, 0x0d, 0x77, 0x72, 0x69, 0x74, 0x65, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x12, 0x41, 0x0a, 0x09, 0x6b, 0x65, 0x65, 0x70, 0x61,
	0x6c, 0x69, 0x76, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x08, 0xfa, 0x42, 0x05, 0xaa, 0x01, 0x02, 0x32, 0x00, 0x52,
	0x09, 0x6b, 0x65, 0x65, 0x70, 0x61, 0x6c, 0x69, 0x76, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x73, 0x65,
	0x6e, 0x74, 0x69, 0x6e, 0x65, 0x6c, 0x5f, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0f, 0x73, 0x65, 0x6e, 0x74, 0x69, 0x6e, 0x65, 0x6c, 0x5f, 0x6d, 0x61,
	0x73, 0x74, 0x65, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x65, 0x6e, 0x74, 0x69, 0x6e, 0x65, 0x6c,
	0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x6e, 0x74, 0x69, 0x6e, 0x65,
	0x6c, 0x73, 0x22, 0x90, 0x01, 0x0a, 0x0d, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x6d, 0x69,
	0x74, 0x73, 0x43, 0x46, 0x12, 0x53, 0x0a, 0x20, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x5f, 0x70, 0x65, 0x72, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x70, 0x65,
	0x72, 0x5f, 0x6d, 0x69, 0x6e, 0x75, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x07,
	0xfa, 0x42, 0x04, 0x2a, 0x02, 0x28, 0x00, 0x52, 0x20, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x70, 0x65, 0x72, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x70,
	0x65, 0x72, 0x5f, 0x6d, 0x69, 0x6e, 0x75, 0x74, 0x65, 0x12, 0x2a, 0x0a, 0x10, 0x72, 0x65, 0x64,
	0x69, 0x73, 0x5f, 0x6b, 0x65, 0x79, 0x5f, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x10, 0x72, 0x65, 0x64, 0x69, 0x73, 0x5f, 0x6b, 0x65, 0x79, 0x5f, 0x70,
	0x72, 0x65, 0x66, 0x69, 0x78, 0x22, 0xaf, 0x02, 0x0a, 0x11, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x39, 0x0a, 0x0c, 0x6c,
	0x69, 0x73, 0x74, 0x65, 0x6e, 0x5f, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x15, 0x2e, 0x6b, 0x61, 0x73, 0x63, 0x66, 0x67, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x65,
	0x6e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x43, 0x46, 0x52, 0x0c, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e,
	0x5f, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x12, 0x28, 0x0a, 0x06, 0x67, 0x69, 0x74, 0x6c, 0x61, 0x62,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6b, 0x61, 0x73, 0x63, 0x66, 0x67, 0x2e,
	0x47, 0x69, 0x74, 0x4c, 0x61, 0x62, 0x43, 0x46, 0x52, 0x06, 0x67, 0x69, 0x74, 0x6c, 0x61, 0x62,
	0x12, 0x25, 0x0a, 0x05, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0f, 0x2e, 0x6b, 0x61, 0x73, 0x63, 0x66, 0x67, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x43, 0x46,
	0x52, 0x05, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x12, 0x3d, 0x0a, 0x0d, 0x6f, 0x62, 0x73, 0x65, 0x72,
	0x76, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17,
	0x2e, 0x6b, 0x61, 0x73, 0x63, 0x66, 0x67, 0x2e, 0x4f, 0x62, 0x73, 0x65, 0x72, 0x76, 0x61, 0x62,
	0x69, 0x6c, 0x69, 0x74, 0x79, 0x43, 0x46, 0x52, 0x0d, 0x6f, 0x62, 0x73, 0x65, 0x72, 0x76, 0x61,
	0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x28, 0x0a, 0x06, 0x67, 0x69, 0x74, 0x61, 0x6c, 0x79,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6b, 0x61, 0x73, 0x63, 0x66, 0x67, 0x2e,
	0x47, 0x69, 0x74, 0x61, 0x6c, 0x79, 0x43, 0x46, 0x52, 0x06, 0x67, 0x69, 0x74, 0x61, 0x6c, 0x79,
	0x12, 0x25, 0x0a, 0x05, 0x72, 0x65, 0x64, 0x69, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0f, 0x2e, 0x6b, 0x61, 0x73, 0x63, 0x66, 0x67, 0x2e, 0x52, 0x65, 0x64, 0x69, 0x73, 0x43, 0x46,
	0x52, 0x05, 0x72, 0x65, 0x64, 0x69, 0x73, 0x2a, 0x3c, 0x0a, 0x13, 0x6c, 0x69, 0x73, 0x74, 0x65,
	0x6e, 0x5f, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x65, 0x6e, 0x75, 0x6d, 0x12, 0x07,
	0x0a, 0x03, 0x74, 0x63, 0x70, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x74, 0x63, 0x70, 0x34, 0x10,
	0x01, 0x12, 0x08, 0x0a, 0x04, 0x74, 0x63, 0x70, 0x36, 0x10, 0x02, 0x12, 0x08, 0x0a, 0x04, 0x75,
	0x6e, 0x69, 0x78, 0x10, 0x03, 0x2a, 0x3e, 0x0a, 0x12, 0x6c, 0x6f, 0x67, 0x67, 0x69, 0x6e, 0x67,
	0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x5f, 0x65, 0x6e, 0x75, 0x6d, 0x12, 0x08, 0x0a, 0x04, 0x69,
	0x6e, 0x66, 0x6f, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x64, 0x65, 0x62, 0x75, 0x67, 0x10, 0x01,
	0x12, 0x08, 0x0a, 0x04, 0x77, 0x61, 0x72, 0x6e, 0x10, 0x02, 0x12, 0x09, 0x0a, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x10, 0x03, 0x42, 0x43, 0x5a, 0x41, 0x67, 0x69, 0x74, 0x6c, 0x61, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x67, 0x69, 0x74, 0x6c, 0x61, 0x62, 0x2d, 0x6f, 0x72, 0x67, 0x2f, 0x63,
	0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x2d, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x2f, 0x67, 0x69, 0x74, 0x6c, 0x61, 0x62, 0x2d, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2f,
	0x70, 0x6b, 0x67, 0x2f, 0x6b, 0x61, 0x73, 0x63, 0x66, 0x67, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_pkg_kascfg_kascfg_proto_rawDescOnce sync.Once
	file_pkg_kascfg_kascfg_proto_rawDescData = file_pkg_kascfg_kascfg_proto_rawDesc
)

func file_pkg_kascfg_kascfg_proto_rawDescGZIP() []byte {
	file_pkg_kascfg_kascfg_proto_rawDescOnce.Do(func() {
		file_pkg_kascfg_kascfg_proto_rawDescData = protoimpl.X.CompressGZIP(file_pkg_kascfg_kascfg_proto_rawDescData)
	})
	return file_pkg_kascfg_kascfg_proto_rawDescData
}

var file_pkg_kascfg_kascfg_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_pkg_kascfg_kascfg_proto_msgTypes = make([]protoimpl.MessageInfo, 19)
var file_pkg_kascfg_kascfg_proto_goTypes = []interface{}{
	(ListenNetworkEnum)(0),         // 0: kascfg.listen_network_enum
	(LoggingLevelEnum)(0),          // 1: kascfg.logging_level_enum
	(*ListenAgentCF)(nil),          // 2: kascfg.ListenAgentCF
	(*PrometheusCF)(nil),           // 3: kascfg.PrometheusCF
	(*ObservabilityListenCF)(nil),  // 4: kascfg.ObservabilityListenCF
	(*TracingCF)(nil),              // 5: kascfg.TracingCF
	(*LoggingCF)(nil),              // 6: kascfg.LoggingCF
	(*GitLabCF)(nil),               // 7: kascfg.GitLabCF
	(*GitopsCF)(nil),               // 8: kascfg.GitopsCF
	(*SentryCF)(nil),               // 9: kascfg.SentryCF
	(*AgentCF)(nil),                // 10: kascfg.AgentCF
	(*AgentConfigurationCF)(nil),   // 11: kascfg.AgentConfigurationCF
	(*GoogleProfilerCF)(nil),       // 12: kascfg.GoogleProfilerCF
	(*LivenessProbeCF)(nil),        // 13: kascfg.LivenessProbeCF
	(*ReadinessProbeCF)(nil),       // 14: kascfg.ReadinessProbeCF
	(*ObservabilityCF)(nil),        // 15: kascfg.ObservabilityCF
	(*TokenBucketRateLimitCF)(nil), // 16: kascfg.TokenBucketRateLimitCF
	(*GitalyCF)(nil),               // 17: kascfg.GitalyCF
	(*RedisCF)(nil),                // 18: kascfg.RedisCF
	(*AgentLimitsCF)(nil),          // 19: kascfg.AgentLimitsCF
	(*ConfigurationFile)(nil),      // 20: kascfg.ConfigurationFile
	(*duration.Duration)(nil),      // 21: google.protobuf.Duration
}
var file_pkg_kascfg_kascfg_proto_depIdxs = []int32{
	0,  // 0: kascfg.ListenAgentCF.network:type_name -> kascfg.listen_network_enum
	0,  // 1: kascfg.ObservabilityListenCF.network:type_name -> kascfg.listen_network_enum
	1,  // 2: kascfg.LoggingCF.level:type_name -> kascfg.logging_level_enum
	21, // 3: kascfg.GitopsCF.poll_period:type_name -> google.protobuf.Duration
	21, // 4: kascfg.GitopsCF.project_info_cache_ttl:type_name -> google.protobuf.Duration
	21, // 5: kascfg.GitopsCF.project_info_cache_error_ttl:type_name -> google.protobuf.Duration
	11, // 6: kascfg.AgentCF.configuration:type_name -> kascfg.AgentConfigurationCF
	8,  // 7: kascfg.AgentCF.gitops:type_name -> kascfg.GitopsCF
	21, // 8: kascfg.AgentCF.info_cache_ttl:type_name -> google.protobuf.Duration
	21, // 9: kascfg.AgentCF.info_cache_error_ttl:type_name -> google.protobuf.Duration
	19, // 10: kascfg.AgentCF.limits:type_name -> kascfg.AgentLimitsCF
	21, // 11: kascfg.AgentConfigurationCF.poll_period:type_name -> google.protobuf.Duration
	21, // 12: kascfg.ObservabilityCF.usage_reporting_period:type_name -> google.protobuf.Duration
	4,  // 13: kascfg.ObservabilityCF.listen:type_name -> kascfg.ObservabilityListenCF
	3,  // 14: kascfg.ObservabilityCF.prometheus:type_name -> kascfg.PrometheusCF
	5,  // 15: kascfg.ObservabilityCF.tracing:type_name -> kascfg.TracingCF
	9,  // 16: kascfg.ObservabilityCF.sentry:type_name -> kascfg.SentryCF
	6,  // 17: kascfg.ObservabilityCF.logging:type_name -> kascfg.LoggingCF
	12, // 18: kascfg.ObservabilityCF.google_profiler:type_name -> kascfg.GoogleProfilerCF
	13, // 19: kascfg.ObservabilityCF.liveness_probe:type_name -> kascfg.LivenessProbeCF
	14, // 20: kascfg.ObservabilityCF.readiness_probe:type_name -> kascfg.ReadinessProbeCF
	16, // 21: kascfg.GitalyCF.global_api_rate_limit:type_name -> kascfg.TokenBucketRateLimitCF
	16, // 22: kascfg.GitalyCF.per_server_api_rate_limit:type_name -> kascfg.TokenBucketRateLimitCF
	21, // 23: kascfg.RedisCF.read_timeout:type_name -> google.protobuf.Duration
	21, // 24: kascfg.RedisCF.write_timeout:type_name -> google.protobuf.Duration
	21, // 25: kascfg.RedisCF.keepalive:type_name -> google.protobuf.Duration
	2,  // 26: kascfg.ConfigurationFile.listen_agent:type_name -> kascfg.ListenAgentCF
	7,  // 27: kascfg.ConfigurationFile.gitlab:type_name -> kascfg.GitLabCF
	10, // 28: kascfg.ConfigurationFile.agent:type_name -> kascfg.AgentCF
	15, // 29: kascfg.ConfigurationFile.observability:type_name -> kascfg.ObservabilityCF
	17, // 30: kascfg.ConfigurationFile.gitaly:type_name -> kascfg.GitalyCF
	18, // 31: kascfg.ConfigurationFile.redis:type_name -> kascfg.RedisCF
	32, // [32:32] is the sub-list for method output_type
	32, // [32:32] is the sub-list for method input_type
	32, // [32:32] is the sub-list for extension type_name
	32, // [32:32] is the sub-list for extension extendee
	0,  // [0:32] is the sub-list for field type_name
}

func init() { file_pkg_kascfg_kascfg_proto_init() }
func file_pkg_kascfg_kascfg_proto_init() {
	if File_pkg_kascfg_kascfg_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_pkg_kascfg_kascfg_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListenAgentCF); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_kascfg_kascfg_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PrometheusCF); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_kascfg_kascfg_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ObservabilityListenCF); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_kascfg_kascfg_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TracingCF); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_kascfg_kascfg_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoggingCF); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_kascfg_kascfg_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GitLabCF); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_kascfg_kascfg_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GitopsCF); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_kascfg_kascfg_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SentryCF); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_kascfg_kascfg_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AgentCF); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_kascfg_kascfg_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AgentConfigurationCF); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_kascfg_kascfg_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleProfilerCF); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_kascfg_kascfg_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LivenessProbeCF); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_kascfg_kascfg_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReadinessProbeCF); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_kascfg_kascfg_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ObservabilityCF); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_kascfg_kascfg_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TokenBucketRateLimitCF); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_kascfg_kascfg_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GitalyCF); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_kascfg_kascfg_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RedisCF); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_kascfg_kascfg_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AgentLimitsCF); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_kascfg_kascfg_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigurationFile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_pkg_kascfg_kascfg_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   19,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_pkg_kascfg_kascfg_proto_goTypes,
		DependencyIndexes: file_pkg_kascfg_kascfg_proto_depIdxs,
		EnumInfos:         file_pkg_kascfg_kascfg_proto_enumTypes,
		MessageInfos:      file_pkg_kascfg_kascfg_proto_msgTypes,
	}.Build()
	File_pkg_kascfg_kascfg_proto = out.File
	file_pkg_kascfg_kascfg_proto_rawDesc = nil
	file_pkg_kascfg_kascfg_proto_goTypes = nil
	file_pkg_kascfg_kascfg_proto_depIdxs = nil
}
