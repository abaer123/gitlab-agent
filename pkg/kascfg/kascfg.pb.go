// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.11.3
// source: pkg/kascfg/kascfg.proto

package kascfg

import (
	reflect "reflect"
	sync "sync"

	proto "github.com/golang/protobuf/proto"
	duration "github.com/golang/protobuf/ptypes/duration"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type ListenCF struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Network   string `protobuf:"bytes,1,opt,name=network,proto3" json:"network,omitempty"`
	Address   string `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
	Websocket bool   `protobuf:"varint,3,opt,name=websocket,proto3" json:"websocket,omitempty"`
}

func (x *ListenCF) Reset() {
	*x = ListenCF{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_kascfg_kascfg_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListenCF) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListenCF) ProtoMessage() {}

func (x *ListenCF) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_kascfg_kascfg_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListenCF.ProtoReflect.Descriptor instead.
func (*ListenCF) Descriptor() ([]byte, []int) {
	return file_pkg_kascfg_kascfg_proto_rawDescGZIP(), []int{0}
}

func (x *ListenCF) GetNetwork() string {
	if x != nil {
		return x.Network
	}
	return ""
}

func (x *ListenCF) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *ListenCF) GetWebsocket() bool {
	if x != nil {
		return x.Websocket
	}
	return false
}

type PrometheusListenCF struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Disabled bool   `protobuf:"varint,1,opt,name=disabled,proto3" json:"disabled,omitempty"`
	Network  string `protobuf:"bytes,2,opt,name=network,proto3" json:"network,omitempty"`
	Address  string `protobuf:"bytes,3,opt,name=address,proto3" json:"address,omitempty"`
	UrlPath  string `protobuf:"bytes,4,opt,name=url_path,proto3" json:"url_path,omitempty"`
}

func (x *PrometheusListenCF) Reset() {
	*x = PrometheusListenCF{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_kascfg_kascfg_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PrometheusListenCF) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PrometheusListenCF) ProtoMessage() {}

func (x *PrometheusListenCF) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_kascfg_kascfg_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PrometheusListenCF.ProtoReflect.Descriptor instead.
func (*PrometheusListenCF) Descriptor() ([]byte, []int) {
	return file_pkg_kascfg_kascfg_proto_rawDescGZIP(), []int{1}
}

func (x *PrometheusListenCF) GetDisabled() bool {
	if x != nil {
		return x.Disabled
	}
	return false
}

func (x *PrometheusListenCF) GetNetwork() string {
	if x != nil {
		return x.Network
	}
	return ""
}

func (x *PrometheusListenCF) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *PrometheusListenCF) GetUrlPath() string {
	if x != nil {
		return x.UrlPath
	}
	return ""
}

type GitLabCF struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address                  string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	AuthenticationSecretFile string `protobuf:"bytes,2,opt,name=authentication_secret_file,proto3" json:"authentication_secret_file,omitempty"`
}

func (x *GitLabCF) Reset() {
	*x = GitLabCF{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_kascfg_kascfg_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GitLabCF) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GitLabCF) ProtoMessage() {}

func (x *GitLabCF) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_kascfg_kascfg_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GitLabCF.ProtoReflect.Descriptor instead.
func (*GitLabCF) Descriptor() ([]byte, []int) {
	return file_pkg_kascfg_kascfg_proto_rawDescGZIP(), []int{2}
}

func (x *GitLabCF) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *GitLabCF) GetAuthenticationSecretFile() string {
	if x != nil {
		return x.AuthenticationSecretFile
	}
	return ""
}

type GitopsCF struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PollPeriod               *duration.Duration `protobuf:"bytes,1,opt,name=poll_period,proto3" json:"poll_period,omitempty"`
	ProjectInfoCacheTtl      *duration.Duration `protobuf:"bytes,2,opt,name=project_info_cache_ttl,proto3" json:"project_info_cache_ttl,omitempty"`
	ProjectInfoCacheErrorTtl *duration.Duration `protobuf:"bytes,3,opt,name=project_info_cache_error_ttl,proto3" json:"project_info_cache_error_ttl,omitempty"`
}

func (x *GitopsCF) Reset() {
	*x = GitopsCF{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_kascfg_kascfg_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GitopsCF) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GitopsCF) ProtoMessage() {}

func (x *GitopsCF) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_kascfg_kascfg_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GitopsCF.ProtoReflect.Descriptor instead.
func (*GitopsCF) Descriptor() ([]byte, []int) {
	return file_pkg_kascfg_kascfg_proto_rawDescGZIP(), []int{3}
}

func (x *GitopsCF) GetPollPeriod() *duration.Duration {
	if x != nil {
		return x.PollPeriod
	}
	return nil
}

func (x *GitopsCF) GetProjectInfoCacheTtl() *duration.Duration {
	if x != nil {
		return x.ProjectInfoCacheTtl
	}
	return nil
}

func (x *GitopsCF) GetProjectInfoCacheErrorTtl() *duration.Duration {
	if x != nil {
		return x.ProjectInfoCacheErrorTtl
	}
	return nil
}

type AgentCF struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Configuration     *AgentConfigurationCF `protobuf:"bytes,1,opt,name=configuration,proto3" json:"configuration,omitempty"`
	Gitops            *GitopsCF             `protobuf:"bytes,2,opt,name=gitops,proto3" json:"gitops,omitempty"`
	InfoCacheTtl      *duration.Duration    `protobuf:"bytes,3,opt,name=info_cache_ttl,proto3" json:"info_cache_ttl,omitempty"`
	InfoCacheErrorTtl *duration.Duration    `protobuf:"bytes,4,opt,name=info_cache_error_ttl,proto3" json:"info_cache_error_ttl,omitempty"`
}

func (x *AgentCF) Reset() {
	*x = AgentCF{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_kascfg_kascfg_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgentCF) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentCF) ProtoMessage() {}

func (x *AgentCF) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_kascfg_kascfg_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentCF.ProtoReflect.Descriptor instead.
func (*AgentCF) Descriptor() ([]byte, []int) {
	return file_pkg_kascfg_kascfg_proto_rawDescGZIP(), []int{4}
}

func (x *AgentCF) GetConfiguration() *AgentConfigurationCF {
	if x != nil {
		return x.Configuration
	}
	return nil
}

func (x *AgentCF) GetGitops() *GitopsCF {
	if x != nil {
		return x.Gitops
	}
	return nil
}

func (x *AgentCF) GetInfoCacheTtl() *duration.Duration {
	if x != nil {
		return x.InfoCacheTtl
	}
	return nil
}

func (x *AgentCF) GetInfoCacheErrorTtl() *duration.Duration {
	if x != nil {
		return x.InfoCacheErrorTtl
	}
	return nil
}

type AgentConfigurationCF struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PollPeriod *duration.Duration `protobuf:"bytes,1,opt,name=poll_period,proto3" json:"poll_period,omitempty"`
}

func (x *AgentConfigurationCF) Reset() {
	*x = AgentConfigurationCF{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_kascfg_kascfg_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgentConfigurationCF) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentConfigurationCF) ProtoMessage() {}

func (x *AgentConfigurationCF) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_kascfg_kascfg_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentConfigurationCF.ProtoReflect.Descriptor instead.
func (*AgentConfigurationCF) Descriptor() ([]byte, []int) {
	return file_pkg_kascfg_kascfg_proto_rawDescGZIP(), []int{5}
}

func (x *AgentConfigurationCF) GetPollPeriod() *duration.Duration {
	if x != nil {
		return x.PollPeriod
	}
	return nil
}

type MetricsCF struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UsageReportingPeriod *duration.Duration  `protobuf:"bytes,1,opt,name=usage_reporting_period,proto3" json:"usage_reporting_period,omitempty"`
	PrometheusListen     *PrometheusListenCF `protobuf:"bytes,2,opt,name=prometheus_listen,proto3" json:"prometheus_listen,omitempty"`
}

func (x *MetricsCF) Reset() {
	*x = MetricsCF{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_kascfg_kascfg_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MetricsCF) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetricsCF) ProtoMessage() {}

func (x *MetricsCF) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_kascfg_kascfg_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetricsCF.ProtoReflect.Descriptor instead.
func (*MetricsCF) Descriptor() ([]byte, []int) {
	return file_pkg_kascfg_kascfg_proto_rawDescGZIP(), []int{6}
}

func (x *MetricsCF) GetUsageReportingPeriod() *duration.Duration {
	if x != nil {
		return x.UsageReportingPeriod
	}
	return nil
}

func (x *MetricsCF) GetPrometheusListen() *PrometheusListenCF {
	if x != nil {
		return x.PrometheusListen
	}
	return nil
}

type ConfigurationFile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Listen  *ListenCF  `protobuf:"bytes,1,opt,name=listen,proto3" json:"listen,omitempty"`
	Gitlab  *GitLabCF  `protobuf:"bytes,2,opt,name=gitlab,proto3" json:"gitlab,omitempty"`
	Agent   *AgentCF   `protobuf:"bytes,3,opt,name=agent,proto3" json:"agent,omitempty"`
	Metrics *MetricsCF `protobuf:"bytes,4,opt,name=metrics,proto3" json:"metrics,omitempty"`
}

func (x *ConfigurationFile) Reset() {
	*x = ConfigurationFile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_kascfg_kascfg_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigurationFile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigurationFile) ProtoMessage() {}

func (x *ConfigurationFile) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_kascfg_kascfg_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigurationFile.ProtoReflect.Descriptor instead.
func (*ConfigurationFile) Descriptor() ([]byte, []int) {
	return file_pkg_kascfg_kascfg_proto_rawDescGZIP(), []int{7}
}

func (x *ConfigurationFile) GetListen() *ListenCF {
	if x != nil {
		return x.Listen
	}
	return nil
}

func (x *ConfigurationFile) GetGitlab() *GitLabCF {
	if x != nil {
		return x.Gitlab
	}
	return nil
}

func (x *ConfigurationFile) GetAgent() *AgentCF {
	if x != nil {
		return x.Agent
	}
	return nil
}

func (x *ConfigurationFile) GetMetrics() *MetricsCF {
	if x != nil {
		return x.Metrics
	}
	return nil
}

var File_pkg_kascfg_kascfg_proto protoreflect.FileDescriptor

var file_pkg_kascfg_kascfg_proto_rawDesc = []byte{
	0x0a, 0x17, 0x70, 0x6b, 0x67, 0x2f, 0x6b, 0x61, 0x73, 0x63, 0x66, 0x67, 0x2f, 0x6b, 0x61, 0x73,
	0x63, 0x66, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06, 0x6b, 0x61, 0x73, 0x63, 0x66,
	0x67, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0x5c, 0x0a, 0x08, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x43, 0x46, 0x12, 0x18, 0x0a,
	0x07, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x12, 0x1c, 0x0a, 0x09, 0x77, 0x65, 0x62, 0x73, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x77, 0x65, 0x62, 0x73, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x22,
	0x80, 0x01, 0x0a, 0x12, 0x50, 0x72, 0x6f, 0x6d, 0x65, 0x74, 0x68, 0x65, 0x75, 0x73, 0x4c, 0x69,
	0x73, 0x74, 0x65, 0x6e, 0x43, 0x46, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c,
	0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c,
	0x65, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x12, 0x18, 0x0a, 0x07,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x72, 0x6c, 0x5f, 0x70, 0x61,
	0x74, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x72, 0x6c, 0x5f, 0x70, 0x61,
	0x74, 0x68, 0x22, 0x64, 0x0a, 0x08, 0x47, 0x69, 0x74, 0x4c, 0x61, 0x62, 0x43, 0x46, 0x12, 0x18,
	0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x3e, 0x0a, 0x1a, 0x61, 0x75, 0x74, 0x68,
	0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x63, 0x72, 0x65,
	0x74, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x1a, 0x61, 0x75,
	0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x63,
	0x72, 0x65, 0x74, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x22, 0xf9, 0x01, 0x0a, 0x08, 0x47, 0x69, 0x74,
	0x6f, 0x70, 0x73, 0x43, 0x46, 0x12, 0x3b, 0x0a, 0x0b, 0x70, 0x6f, 0x6c, 0x6c, 0x5f, 0x70, 0x65,
	0x72, 0x69, 0x6f, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x70, 0x6f, 0x6c, 0x6c, 0x5f, 0x70, 0x65, 0x72, 0x69,
	0x6f, 0x64, 0x12, 0x51, 0x0a, 0x16, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x6e,
	0x66, 0x6f, 0x5f, 0x63, 0x61, 0x63, 0x68, 0x65, 0x5f, 0x74, 0x74, 0x6c, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x16, 0x70,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x63, 0x61, 0x63, 0x68,
	0x65, 0x5f, 0x74, 0x74, 0x6c, 0x12, 0x5d, 0x0a, 0x1c, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x63, 0x61, 0x63, 0x68, 0x65, 0x5f, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x5f, 0x74, 0x74, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x1c, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f,
	0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x63, 0x61, 0x63, 0x68, 0x65, 0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x5f, 0x74, 0x74, 0x6c, 0x22, 0x89, 0x02, 0x0a, 0x07, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x43, 0x46,
	0x12, 0x42, 0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6b, 0x61, 0x73, 0x63, 0x66, 0x67,
	0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x43, 0x46, 0x52, 0x0d, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x28, 0x0a, 0x06, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6b, 0x61, 0x73, 0x63, 0x66, 0x67, 0x2e, 0x47, 0x69,
	0x74, 0x6f, 0x70, 0x73, 0x43, 0x46, 0x52, 0x06, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x73, 0x12, 0x41,
	0x0a, 0x0e, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x63, 0x61, 0x63, 0x68, 0x65, 0x5f, 0x74, 0x74, 0x6c,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x0e, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x63, 0x61, 0x63, 0x68, 0x65, 0x5f, 0x74, 0x74,
	0x6c, 0x12, 0x4d, 0x0a, 0x14, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x63, 0x61, 0x63, 0x68, 0x65, 0x5f,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x74, 0x74, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x14, 0x69, 0x6e, 0x66, 0x6f,
	0x5f, 0x63, 0x61, 0x63, 0x68, 0x65, 0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x74, 0x74, 0x6c,
	0x22, 0x53, 0x0a, 0x14, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x46, 0x12, 0x3b, 0x0a, 0x0b, 0x70, 0x6f, 0x6c, 0x6c,
	0x5f, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x70, 0x6f, 0x6c, 0x6c, 0x5f, 0x70,
	0x65, 0x72, 0x69, 0x6f, 0x64, 0x22, 0xa8, 0x01, 0x0a, 0x09, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63,
	0x73, 0x43, 0x46, 0x12, 0x51, 0x0a, 0x16, 0x75, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x72, 0x65, 0x70,
	0x6f, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x16,
	0x75, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x5f,
	0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x12, 0x48, 0x0a, 0x11, 0x70, 0x72, 0x6f, 0x6d, 0x65, 0x74,
	0x68, 0x65, 0x75, 0x73, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x6b, 0x61, 0x73, 0x63, 0x66, 0x67, 0x2e, 0x50, 0x72, 0x6f, 0x6d, 0x65,
	0x74, 0x68, 0x65, 0x75, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x43, 0x46, 0x52, 0x11, 0x70,
	0x72, 0x6f, 0x6d, 0x65, 0x74, 0x68, 0x65, 0x75, 0x73, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e,
	0x22, 0xbb, 0x01, 0x0a, 0x11, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x28, 0x0a, 0x06, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6b, 0x61, 0x73, 0x63, 0x66, 0x67, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x43, 0x46, 0x52, 0x06, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e,
	0x12, 0x28, 0x0a, 0x06, 0x67, 0x69, 0x74, 0x6c, 0x61, 0x62, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x10, 0x2e, 0x6b, 0x61, 0x73, 0x63, 0x66, 0x67, 0x2e, 0x47, 0x69, 0x74, 0x4c, 0x61, 0x62,
	0x43, 0x46, 0x52, 0x06, 0x67, 0x69, 0x74, 0x6c, 0x61, 0x62, 0x12, 0x25, 0x0a, 0x05, 0x61, 0x67,
	0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x6b, 0x61, 0x73, 0x63,
	0x66, 0x67, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x43, 0x46, 0x52, 0x05, 0x61, 0x67, 0x65, 0x6e,
	0x74, 0x12, 0x2b, 0x0a, 0x07, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6b, 0x61, 0x73, 0x63, 0x66, 0x67, 0x2e, 0x4d, 0x65, 0x74, 0x72,
	0x69, 0x63, 0x73, 0x43, 0x46, 0x52, 0x07, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x42, 0x43,
	0x5a, 0x41, 0x67, 0x69, 0x74, 0x6c, 0x61, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x67, 0x69, 0x74,
	0x6c, 0x61, 0x62, 0x2d, 0x6f, 0x72, 0x67, 0x2f, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x2d,
	0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x67, 0x69, 0x74, 0x6c,
	0x61, 0x62, 0x2d, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x6b, 0x61, 0x73,
	0x63, 0x66, 0x67, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_pkg_kascfg_kascfg_proto_rawDescOnce sync.Once
	file_pkg_kascfg_kascfg_proto_rawDescData = file_pkg_kascfg_kascfg_proto_rawDesc
)

func file_pkg_kascfg_kascfg_proto_rawDescGZIP() []byte {
	file_pkg_kascfg_kascfg_proto_rawDescOnce.Do(func() {
		file_pkg_kascfg_kascfg_proto_rawDescData = protoimpl.X.CompressGZIP(file_pkg_kascfg_kascfg_proto_rawDescData)
	})
	return file_pkg_kascfg_kascfg_proto_rawDescData
}

var file_pkg_kascfg_kascfg_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_pkg_kascfg_kascfg_proto_goTypes = []interface{}{
	(*ListenCF)(nil),             // 0: kascfg.ListenCF
	(*PrometheusListenCF)(nil),   // 1: kascfg.PrometheusListenCF
	(*GitLabCF)(nil),             // 2: kascfg.GitLabCF
	(*GitopsCF)(nil),             // 3: kascfg.GitopsCF
	(*AgentCF)(nil),              // 4: kascfg.AgentCF
	(*AgentConfigurationCF)(nil), // 5: kascfg.AgentConfigurationCF
	(*MetricsCF)(nil),            // 6: kascfg.MetricsCF
	(*ConfigurationFile)(nil),    // 7: kascfg.ConfigurationFile
	(*duration.Duration)(nil),    // 8: google.protobuf.Duration
}
var file_pkg_kascfg_kascfg_proto_depIdxs = []int32{
	8,  // 0: kascfg.GitopsCF.poll_period:type_name -> google.protobuf.Duration
	8,  // 1: kascfg.GitopsCF.project_info_cache_ttl:type_name -> google.protobuf.Duration
	8,  // 2: kascfg.GitopsCF.project_info_cache_error_ttl:type_name -> google.protobuf.Duration
	5,  // 3: kascfg.AgentCF.configuration:type_name -> kascfg.AgentConfigurationCF
	3,  // 4: kascfg.AgentCF.gitops:type_name -> kascfg.GitopsCF
	8,  // 5: kascfg.AgentCF.info_cache_ttl:type_name -> google.protobuf.Duration
	8,  // 6: kascfg.AgentCF.info_cache_error_ttl:type_name -> google.protobuf.Duration
	8,  // 7: kascfg.AgentConfigurationCF.poll_period:type_name -> google.protobuf.Duration
	8,  // 8: kascfg.MetricsCF.usage_reporting_period:type_name -> google.protobuf.Duration
	1,  // 9: kascfg.MetricsCF.prometheus_listen:type_name -> kascfg.PrometheusListenCF
	0,  // 10: kascfg.ConfigurationFile.listen:type_name -> kascfg.ListenCF
	2,  // 11: kascfg.ConfigurationFile.gitlab:type_name -> kascfg.GitLabCF
	4,  // 12: kascfg.ConfigurationFile.agent:type_name -> kascfg.AgentCF
	6,  // 13: kascfg.ConfigurationFile.metrics:type_name -> kascfg.MetricsCF
	14, // [14:14] is the sub-list for method output_type
	14, // [14:14] is the sub-list for method input_type
	14, // [14:14] is the sub-list for extension type_name
	14, // [14:14] is the sub-list for extension extendee
	0,  // [0:14] is the sub-list for field type_name
}

func init() { file_pkg_kascfg_kascfg_proto_init() }
func file_pkg_kascfg_kascfg_proto_init() {
	if File_pkg_kascfg_kascfg_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_pkg_kascfg_kascfg_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListenCF); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_kascfg_kascfg_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PrometheusListenCF); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_kascfg_kascfg_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GitLabCF); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_kascfg_kascfg_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GitopsCF); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_kascfg_kascfg_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AgentCF); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_kascfg_kascfg_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AgentConfigurationCF); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_kascfg_kascfg_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MetricsCF); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_kascfg_kascfg_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigurationFile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_pkg_kascfg_kascfg_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_pkg_kascfg_kascfg_proto_goTypes,
		DependencyIndexes: file_pkg_kascfg_kascfg_proto_depIdxs,
		MessageInfos:      file_pkg_kascfg_kascfg_proto_msgTypes,
	}.Build()
	File_pkg_kascfg_kascfg_proto = out.File
	file_pkg_kascfg_kascfg_proto_rawDesc = nil
	file_pkg_kascfg_kascfg_proto_goTypes = nil
	file_pkg_kascfg_kascfg_proto_depIdxs = nil
}
