load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")

go_library(
    name = "kas",
    srcs = [
        "kas.go",
        "kas_get_configuration.go",
        "kas_get_objects_to_synchronize.go",
        "kas_usage_metrics.go",
    ],
    importpath = "gitlab.com/gitlab-org/cluster-integration/gitlab-agent/internal/kas",
    visibility = ["//:__subpackages__"],
    deps = [
        "//internal/agentrpc",
        "//internal/api",
        "//internal/api/apiutil",
        "//internal/gitaly",
        "//internal/gitlab",
        "//internal/tool/errz",
        "//internal/tool/grpctool",
        "//internal/tool/logz",
        "//internal/tool/mathz",
        "//internal/tool/metric",
        "//internal/tool/protodefault",
        "//internal/tool/retry",
        "//pkg/agentcfg",
        "@com_github_bmatcuk_doublestar_v2//:doublestar",
        "@com_github_prometheus_client_golang//prometheus",
        "@com_gitlab_gitlab_org_gitaly//proto/go/gitalypb",
        "@com_gitlab_gitlab_org_labkit//errortracking",
        "@io_k8s_apimachinery//pkg/apis/meta/v1:meta",
        "@io_k8s_apimachinery//pkg/util/wait",
        "@io_k8s_sigs_yaml//:yaml",
        "@org_golang_google_grpc//codes",
        "@org_golang_google_grpc//status",
        "@org_golang_google_protobuf//encoding/protojson",
        "@org_uber_go_zap//:zap",
    ],
)

go_test(
    name = "kas_test",
    size = "small",
    srcs = [
        "kas_get_configuration_test.go",
        "kas_get_objects_to_synchronize_test.go",
        "kas_test.go",
        "kas_usage_metrics_test.go",
    ],
    embed = [":kas"],
    race = "on",
    deps = [
        "//internal/agentrpc",
        "//internal/agentrpc/mock_agentrpc",
        "//internal/api",
        "//internal/api/apiutil",
        "//internal/gitaly",
        "//internal/gitaly/mock_internalgitaly",
        "//internal/gitlab",
        "//internal/gitlab/mock_gitlab",
        "//internal/tool/testing/kube_testing",
        "//internal/tool/testing/matcher",
        "//internal/tool/testing/mock_errtracker",
        "//pkg/agentcfg",
        "@com_github_golang_mock//gomock",
        "@com_github_google_go_cmp//cmp",
        "@com_github_prometheus_client_golang//prometheus",
        "@com_github_stretchr_testify//assert",
        "@com_github_stretchr_testify//require",
        "@com_gitlab_gitlab_org_gitaly//proto/go/gitalypb",
        "@com_gitlab_gitlab_org_labkit//errortracking",
        "@io_k8s_api//core/v1:core",
        "@io_k8s_apimachinery//pkg/apis/meta/v1:meta",
        "@io_k8s_apimachinery//pkg/runtime",
        "@io_k8s_sigs_yaml//:yaml",
        "@org_golang_google_grpc//codes",
        "@org_golang_google_grpc//metadata",
        "@org_golang_google_grpc//status",
        "@org_golang_google_protobuf//encoding/protojson",
        "@org_uber_go_zap//zaptest",
    ],
)
