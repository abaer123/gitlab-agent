load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")

go_library(
    name = "agent",
    srcs = [
        "doc.go",
        "factory.go",
        "module.go",
        "utils.go",
        "worker.go",
    ],
    importpath = "gitlab.com/gitlab-org/cluster-integration/gitlab-agent/internal/module/cilium_alert/agent",
    visibility = ["//:__subpackages__"],
    deps = [
        "//internal/module/cilium_alert",
        "//internal/module/modagent",
        "//internal/tool/grpctool",
        "//internal/tool/retry",
        "//pkg/agentcfg",
        "@com_github_cilium_cilium//api/v1/flow",
        "@com_github_cilium_cilium//api/v1/observer",
        "@com_github_cilium_cilium//pkg/k8s/apis/cilium.io/v2:cilium_io",
        "@com_github_cilium_cilium//pkg/k8s/client/clientset/versioned/typed/cilium.io/v2:cilium_io",
        "@com_github_cilium_cilium//pkg/monitor/api",
        "@com_github_golang_protobuf//proto",
        "@io_k8s_apimachinery//pkg/apis/meta/v1:meta",
        "@io_k8s_apimachinery//pkg/util/wait",
        "@org_golang_google_grpc//:grpc",
        "@org_golang_google_protobuf//encoding/protojson",
        "@org_golang_google_protobuf//proto",
        "@org_golang_google_protobuf//types/known/timestamppb",
        "@org_uber_go_zap//:zap",
    ],
)

go_test(
    name = "agent_test",
    size = "small",
    srcs = [
        "mock_for_cilium_io_test.go",
        "mock_for_observer_test.go",
        "module_test.go",
        "utils_test.go",
        "worker_test.go",
    ],
    embed = [":agent"],
    race = "on",
    deps = [
        "//internal/module/modagent",
        "//internal/tool/testing/mock_modagent",
        "//pkg/agentcfg",
        "@com_github_cilium_cilium//api/v1/flow",
        "@com_github_cilium_cilium//api/v1/observer",
        "@com_github_cilium_cilium//pkg/k8s/apis/cilium.io/v2:cilium_io",
        "@com_github_cilium_cilium//pkg/k8s/client/clientset/versioned/typed/cilium.io/v2:cilium_io",
        "@com_github_cilium_cilium//pkg/k8s/client/clientset/versioned/typed/cilium.io/v2/fake",
        "@com_github_cilium_cilium//pkg/labels",
        "@com_github_cilium_cilium//pkg/policy/api",
        "@com_github_golang_mock//gomock",
        "@com_github_google_go_cmp//cmp",
        "@com_github_stretchr_testify//assert",
        "@com_github_stretchr_testify//require",
        "@io_k8s_apimachinery//pkg/apis/meta/v1:meta",
        "@io_k8s_apimachinery//pkg/types",
        "@io_k8s_apimachinery//pkg/util/wait",
        "@io_k8s_apimachinery//pkg/watch",
        "@io_k8s_client_go//rest",
        "@io_k8s_client_go//testing",
        "@org_golang_google_grpc//:grpc",
        "@org_golang_google_grpc//metadata",
        "@org_golang_google_protobuf//testing/protocmp",
        "@org_uber_go_zap//:zap",
        "@org_uber_go_zap//zapcore",
        "@org_uber_go_zap//zaptest",
    ],
)
