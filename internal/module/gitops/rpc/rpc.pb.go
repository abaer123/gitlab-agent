// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.13.0
// source: internal/module/gitops/rpc/rpc.proto

package rpc

import (
	context "context"
	reflect "reflect"
	sync "sync"

	proto "github.com/golang/protobuf/proto"
	agentcfg "gitlab.com/gitlab-org/cluster-integration/gitlab-agent/pkg/agentcfg"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type ObjectsToSynchronizeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId string             `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	CommitId  string             `protobuf:"bytes,2,opt,name=commit_id,json=commitId,proto3" json:"commit_id,omitempty"`
	Paths     []*agentcfg.PathCF `protobuf:"bytes,3,rep,name=paths,proto3" json:"paths,omitempty"`
}

func (x *ObjectsToSynchronizeRequest) Reset() {
	*x = ObjectsToSynchronizeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_module_gitops_rpc_rpc_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ObjectsToSynchronizeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ObjectsToSynchronizeRequest) ProtoMessage() {}

func (x *ObjectsToSynchronizeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_internal_module_gitops_rpc_rpc_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ObjectsToSynchronizeRequest.ProtoReflect.Descriptor instead.
func (*ObjectsToSynchronizeRequest) Descriptor() ([]byte, []int) {
	return file_internal_module_gitops_rpc_rpc_proto_rawDescGZIP(), []int{0}
}

func (x *ObjectsToSynchronizeRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *ObjectsToSynchronizeRequest) GetCommitId() string {
	if x != nil {
		return x.CommitId
	}
	return ""
}

func (x *ObjectsToSynchronizeRequest) GetPaths() []*agentcfg.PathCF {
	if x != nil {
		return x.Paths
	}
	return nil
}

type ObjectsToSynchronizeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Message:
	//	*ObjectsToSynchronizeResponse_Headers_
	//	*ObjectsToSynchronizeResponse_Object_
	//	*ObjectsToSynchronizeResponse_Trailers_
	Message isObjectsToSynchronizeResponse_Message `protobuf_oneof:"message"`
}

func (x *ObjectsToSynchronizeResponse) Reset() {
	*x = ObjectsToSynchronizeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_module_gitops_rpc_rpc_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ObjectsToSynchronizeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ObjectsToSynchronizeResponse) ProtoMessage() {}

func (x *ObjectsToSynchronizeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_internal_module_gitops_rpc_rpc_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ObjectsToSynchronizeResponse.ProtoReflect.Descriptor instead.
func (*ObjectsToSynchronizeResponse) Descriptor() ([]byte, []int) {
	return file_internal_module_gitops_rpc_rpc_proto_rawDescGZIP(), []int{1}
}

func (m *ObjectsToSynchronizeResponse) GetMessage() isObjectsToSynchronizeResponse_Message {
	if m != nil {
		return m.Message
	}
	return nil
}

func (x *ObjectsToSynchronizeResponse) GetHeaders() *ObjectsToSynchronizeResponse_Headers {
	if x, ok := x.GetMessage().(*ObjectsToSynchronizeResponse_Headers_); ok {
		return x.Headers
	}
	return nil
}

func (x *ObjectsToSynchronizeResponse) GetObject() *ObjectsToSynchronizeResponse_Object {
	if x, ok := x.GetMessage().(*ObjectsToSynchronizeResponse_Object_); ok {
		return x.Object
	}
	return nil
}

func (x *ObjectsToSynchronizeResponse) GetTrailers() *ObjectsToSynchronizeResponse_Trailers {
	if x, ok := x.GetMessage().(*ObjectsToSynchronizeResponse_Trailers_); ok {
		return x.Trailers
	}
	return nil
}

type isObjectsToSynchronizeResponse_Message interface {
	isObjectsToSynchronizeResponse_Message()
}

type ObjectsToSynchronizeResponse_Headers_ struct {
	Headers *ObjectsToSynchronizeResponse_Headers `protobuf:"bytes,1,opt,name=headers,proto3,oneof"`
}

type ObjectsToSynchronizeResponse_Object_ struct {
	Object *ObjectsToSynchronizeResponse_Object `protobuf:"bytes,2,opt,name=object,proto3,oneof"`
}

type ObjectsToSynchronizeResponse_Trailers_ struct {
	Trailers *ObjectsToSynchronizeResponse_Trailers `protobuf:"bytes,3,opt,name=trailers,proto3,oneof"`
}

func (*ObjectsToSynchronizeResponse_Headers_) isObjectsToSynchronizeResponse_Message() {}

func (*ObjectsToSynchronizeResponse_Object_) isObjectsToSynchronizeResponse_Message() {}

func (*ObjectsToSynchronizeResponse_Trailers_) isObjectsToSynchronizeResponse_Message() {}

type ObjectsToSynchronizeResponse_Headers struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommitId string `protobuf:"bytes,1,opt,name=commit_id,json=commitId,proto3" json:"commit_id,omitempty"`
}

func (x *ObjectsToSynchronizeResponse_Headers) Reset() {
	*x = ObjectsToSynchronizeResponse_Headers{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_module_gitops_rpc_rpc_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ObjectsToSynchronizeResponse_Headers) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ObjectsToSynchronizeResponse_Headers) ProtoMessage() {}

func (x *ObjectsToSynchronizeResponse_Headers) ProtoReflect() protoreflect.Message {
	mi := &file_internal_module_gitops_rpc_rpc_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ObjectsToSynchronizeResponse_Headers.ProtoReflect.Descriptor instead.
func (*ObjectsToSynchronizeResponse_Headers) Descriptor() ([]byte, []int) {
	return file_internal_module_gitops_rpc_rpc_proto_rawDescGZIP(), []int{1, 0}
}

func (x *ObjectsToSynchronizeResponse_Headers) GetCommitId() string {
	if x != nil {
		return x.CommitId
	}
	return ""
}

type ObjectsToSynchronizeResponse_Object struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Source string `protobuf:"bytes,1,opt,name=source,proto3" json:"source,omitempty"`
	Data   []byte `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *ObjectsToSynchronizeResponse_Object) Reset() {
	*x = ObjectsToSynchronizeResponse_Object{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_module_gitops_rpc_rpc_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ObjectsToSynchronizeResponse_Object) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ObjectsToSynchronizeResponse_Object) ProtoMessage() {}

func (x *ObjectsToSynchronizeResponse_Object) ProtoReflect() protoreflect.Message {
	mi := &file_internal_module_gitops_rpc_rpc_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ObjectsToSynchronizeResponse_Object.ProtoReflect.Descriptor instead.
func (*ObjectsToSynchronizeResponse_Object) Descriptor() ([]byte, []int) {
	return file_internal_module_gitops_rpc_rpc_proto_rawDescGZIP(), []int{1, 1}
}

func (x *ObjectsToSynchronizeResponse_Object) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

func (x *ObjectsToSynchronizeResponse_Object) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type ObjectsToSynchronizeResponse_Trailers struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ObjectsToSynchronizeResponse_Trailers) Reset() {
	*x = ObjectsToSynchronizeResponse_Trailers{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_module_gitops_rpc_rpc_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ObjectsToSynchronizeResponse_Trailers) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ObjectsToSynchronizeResponse_Trailers) ProtoMessage() {}

func (x *ObjectsToSynchronizeResponse_Trailers) ProtoReflect() protoreflect.Message {
	mi := &file_internal_module_gitops_rpc_rpc_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ObjectsToSynchronizeResponse_Trailers.ProtoReflect.Descriptor instead.
func (*ObjectsToSynchronizeResponse_Trailers) Descriptor() ([]byte, []int) {
	return file_internal_module_gitops_rpc_rpc_proto_rawDescGZIP(), []int{1, 2}
}

var File_internal_module_gitops_rpc_rpc_proto protoreflect.FileDescriptor

var file_internal_module_gitops_rpc_rpc_proto_rawDesc = []byte{
	0x0a, 0x24, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2f, 0x6d, 0x6f, 0x64, 0x75, 0x6c,
	0x65, 0x2f, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x73, 0x2f, 0x72, 0x70, 0x63, 0x2f, 0x72, 0x70, 0x63,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x03, 0x72, 0x70, 0x63, 0x1a, 0x1b, 0x70, 0x6b, 0x67,
	0x2f, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x63, 0x66, 0x67, 0x2f, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x63,
	0x66, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x81, 0x01, 0x0a, 0x1b, 0x4f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x73, 0x54, 0x6f, 0x53, 0x79, 0x6e, 0x63, 0x68, 0x72, 0x6f, 0x6e, 0x69, 0x7a,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x69,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6f, 0x6d, 0x6d,
	0x69, 0x74, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x05, 0x70, 0x61, 0x74, 0x68, 0x73, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x63, 0x66, 0x67, 0x2e, 0x50,
	0x61, 0x74, 0x68, 0x43, 0x46, 0x52, 0x05, 0x70, 0x61, 0x74, 0x68, 0x73, 0x22, 0xe8, 0x02, 0x0a,
	0x1c, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x54, 0x6f, 0x53, 0x79, 0x6e, 0x63, 0x68, 0x72,
	0x6f, 0x6e, 0x69, 0x7a, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x45, 0x0a,
	0x07, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29,
	0x2e, 0x72, 0x70, 0x63, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x54, 0x6f, 0x53, 0x79,
	0x6e, 0x63, 0x68, 0x72, 0x6f, 0x6e, 0x69, 0x7a, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x2e, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x48, 0x00, 0x52, 0x07, 0x68, 0x65, 0x61,
	0x64, 0x65, 0x72, 0x73, 0x12, 0x42, 0x0a, 0x06, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x73, 0x54, 0x6f, 0x53, 0x79, 0x6e, 0x63, 0x68, 0x72, 0x6f, 0x6e, 0x69, 0x7a, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x48, 0x00,
	0x52, 0x06, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x48, 0x0a, 0x08, 0x74, 0x72, 0x61, 0x69,
	0x6c, 0x65, 0x72, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x72, 0x70, 0x63,
	0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x54, 0x6f, 0x53, 0x79, 0x6e, 0x63, 0x68, 0x72,
	0x6f, 0x6e, 0x69, 0x7a, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x54, 0x72,
	0x61, 0x69, 0x6c, 0x65, 0x72, 0x73, 0x48, 0x00, 0x52, 0x08, 0x74, 0x72, 0x61, 0x69, 0x6c, 0x65,
	0x72, 0x73, 0x1a, 0x26, 0x0a, 0x07, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x12, 0x1b, 0x0a,
	0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x49, 0x64, 0x1a, 0x34, 0x0a, 0x06, 0x4f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x1a, 0x0a, 0x0a, 0x08, 0x54, 0x72, 0x61, 0x69, 0x6c, 0x65, 0x72, 0x73, 0x42, 0x09, 0x0a, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x32, 0x6c, 0x0a, 0x06, 0x47, 0x69, 0x74, 0x6f, 0x70,
	0x73, 0x12, 0x62, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x54,
	0x6f, 0x53, 0x79, 0x6e, 0x63, 0x68, 0x72, 0x6f, 0x6e, 0x69, 0x7a, 0x65, 0x12, 0x20, 0x2e, 0x72,
	0x70, 0x63, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x54, 0x6f, 0x53, 0x79, 0x6e, 0x63,
	0x68, 0x72, 0x6f, 0x6e, 0x69, 0x7a, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21,
	0x2e, 0x72, 0x70, 0x63, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x54, 0x6f, 0x53, 0x79,
	0x6e, 0x63, 0x68, 0x72, 0x6f, 0x6e, 0x69, 0x7a, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x30, 0x01, 0x42, 0x53, 0x5a, 0x51, 0x67, 0x69, 0x74, 0x6c, 0x61, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x67, 0x69, 0x74, 0x6c, 0x61, 0x62, 0x2d, 0x6f, 0x72, 0x67, 0x2f, 0x63,
	0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x2d, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x2f, 0x67, 0x69, 0x74, 0x6c, 0x61, 0x62, 0x2d, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2f,
	0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2f, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2f,
	0x67, 0x69, 0x74, 0x6f, 0x70, 0x73, 0x2f, 0x72, 0x70, 0x63, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_internal_module_gitops_rpc_rpc_proto_rawDescOnce sync.Once
	file_internal_module_gitops_rpc_rpc_proto_rawDescData = file_internal_module_gitops_rpc_rpc_proto_rawDesc
)

func file_internal_module_gitops_rpc_rpc_proto_rawDescGZIP() []byte {
	file_internal_module_gitops_rpc_rpc_proto_rawDescOnce.Do(func() {
		file_internal_module_gitops_rpc_rpc_proto_rawDescData = protoimpl.X.CompressGZIP(file_internal_module_gitops_rpc_rpc_proto_rawDescData)
	})
	return file_internal_module_gitops_rpc_rpc_proto_rawDescData
}

var file_internal_module_gitops_rpc_rpc_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_internal_module_gitops_rpc_rpc_proto_goTypes = []interface{}{
	(*ObjectsToSynchronizeRequest)(nil),           // 0: rpc.ObjectsToSynchronizeRequest
	(*ObjectsToSynchronizeResponse)(nil),          // 1: rpc.ObjectsToSynchronizeResponse
	(*ObjectsToSynchronizeResponse_Headers)(nil),  // 2: rpc.ObjectsToSynchronizeResponse.Headers
	(*ObjectsToSynchronizeResponse_Object)(nil),   // 3: rpc.ObjectsToSynchronizeResponse.Object
	(*ObjectsToSynchronizeResponse_Trailers)(nil), // 4: rpc.ObjectsToSynchronizeResponse.Trailers
	(*agentcfg.PathCF)(nil),                       // 5: agentcfg.PathCF
}
var file_internal_module_gitops_rpc_rpc_proto_depIdxs = []int32{
	5, // 0: rpc.ObjectsToSynchronizeRequest.paths:type_name -> agentcfg.PathCF
	2, // 1: rpc.ObjectsToSynchronizeResponse.headers:type_name -> rpc.ObjectsToSynchronizeResponse.Headers
	3, // 2: rpc.ObjectsToSynchronizeResponse.object:type_name -> rpc.ObjectsToSynchronizeResponse.Object
	4, // 3: rpc.ObjectsToSynchronizeResponse.trailers:type_name -> rpc.ObjectsToSynchronizeResponse.Trailers
	0, // 4: rpc.Gitops.GetObjectsToSynchronize:input_type -> rpc.ObjectsToSynchronizeRequest
	1, // 5: rpc.Gitops.GetObjectsToSynchronize:output_type -> rpc.ObjectsToSynchronizeResponse
	5, // [5:6] is the sub-list for method output_type
	4, // [4:5] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_internal_module_gitops_rpc_rpc_proto_init() }
func file_internal_module_gitops_rpc_rpc_proto_init() {
	if File_internal_module_gitops_rpc_rpc_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_internal_module_gitops_rpc_rpc_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ObjectsToSynchronizeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_module_gitops_rpc_rpc_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ObjectsToSynchronizeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_module_gitops_rpc_rpc_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ObjectsToSynchronizeResponse_Headers); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_module_gitops_rpc_rpc_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ObjectsToSynchronizeResponse_Object); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_module_gitops_rpc_rpc_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ObjectsToSynchronizeResponse_Trailers); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_internal_module_gitops_rpc_rpc_proto_msgTypes[1].OneofWrappers = []interface{}{
		(*ObjectsToSynchronizeResponse_Headers_)(nil),
		(*ObjectsToSynchronizeResponse_Object_)(nil),
		(*ObjectsToSynchronizeResponse_Trailers_)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_internal_module_gitops_rpc_rpc_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_internal_module_gitops_rpc_rpc_proto_goTypes,
		DependencyIndexes: file_internal_module_gitops_rpc_rpc_proto_depIdxs,
		MessageInfos:      file_internal_module_gitops_rpc_rpc_proto_msgTypes,
	}.Build()
	File_internal_module_gitops_rpc_rpc_proto = out.File
	file_internal_module_gitops_rpc_rpc_proto_rawDesc = nil
	file_internal_module_gitops_rpc_rpc_proto_goTypes = nil
	file_internal_module_gitops_rpc_rpc_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// GitopsClient is the client API for Gitops service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type GitopsClient interface {
	GetObjectsToSynchronize(ctx context.Context, in *ObjectsToSynchronizeRequest, opts ...grpc.CallOption) (Gitops_GetObjectsToSynchronizeClient, error)
}

type gitopsClient struct {
	cc grpc.ClientConnInterface
}

func NewGitopsClient(cc grpc.ClientConnInterface) GitopsClient {
	return &gitopsClient{cc}
}

func (c *gitopsClient) GetObjectsToSynchronize(ctx context.Context, in *ObjectsToSynchronizeRequest, opts ...grpc.CallOption) (Gitops_GetObjectsToSynchronizeClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Gitops_serviceDesc.Streams[0], "/rpc.Gitops/GetObjectsToSynchronize", opts...)
	if err != nil {
		return nil, err
	}
	x := &gitopsGetObjectsToSynchronizeClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Gitops_GetObjectsToSynchronizeClient interface {
	Recv() (*ObjectsToSynchronizeResponse, error)
	grpc.ClientStream
}

type gitopsGetObjectsToSynchronizeClient struct {
	grpc.ClientStream
}

func (x *gitopsGetObjectsToSynchronizeClient) Recv() (*ObjectsToSynchronizeResponse, error) {
	m := new(ObjectsToSynchronizeResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// GitopsServer is the server API for Gitops service.
type GitopsServer interface {
	GetObjectsToSynchronize(*ObjectsToSynchronizeRequest, Gitops_GetObjectsToSynchronizeServer) error
}

// UnimplementedGitopsServer can be embedded to have forward compatible implementations.
type UnimplementedGitopsServer struct {
}

func (*UnimplementedGitopsServer) GetObjectsToSynchronize(*ObjectsToSynchronizeRequest, Gitops_GetObjectsToSynchronizeServer) error {
	return status.Errorf(codes.Unimplemented, "method GetObjectsToSynchronize not implemented")
}

func RegisterGitopsServer(s *grpc.Server, srv GitopsServer) {
	s.RegisterService(&_Gitops_serviceDesc, srv)
}

func _Gitops_GetObjectsToSynchronize_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(ObjectsToSynchronizeRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(GitopsServer).GetObjectsToSynchronize(m, &gitopsGetObjectsToSynchronizeServer{stream})
}

type Gitops_GetObjectsToSynchronizeServer interface {
	Send(*ObjectsToSynchronizeResponse) error
	grpc.ServerStream
}

type gitopsGetObjectsToSynchronizeServer struct {
	grpc.ServerStream
}

func (x *gitopsGetObjectsToSynchronizeServer) Send(m *ObjectsToSynchronizeResponse) error {
	return x.ServerStream.SendMsg(m)
}

var _Gitops_serviceDesc = grpc.ServiceDesc{
	ServiceName: "rpc.Gitops",
	HandlerType: (*GitopsServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "GetObjectsToSynchronize",
			Handler:       _Gitops_GetObjectsToSynchronize_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "internal/module/gitops/rpc/rpc.proto",
}
